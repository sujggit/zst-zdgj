// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `Conference.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.vmediax.oneplusn.ice.api.vmxICE;

public class Conference implements java.lang.Cloneable, java.io.Serializable
{
    public String number;

    public String name;

    public String e164;

    public String chairpwd;

    public String pwd;

    public String starttime;

    public String vscreen;

    public String vsize;

    public String fps;

    public String bandwidth;

    public String audio;

    public String gwIp;

    public String meetnumber;

    public String audiomeetnumber;

    public String conferenceType;

    public Conference()
    {
    }

    public Conference(String number, String name, String e164, String chairpwd, String pwd, String starttime, String vscreen, String vsize, String fps, String bandwidth, String audio, String gwIp, String meetnumber, String audiomeetnumber, String conferenceType)
    {
        this.number = number;
        this.name = name;
        this.e164 = e164;
        this.chairpwd = chairpwd;
        this.pwd = pwd;
        this.starttime = starttime;
        this.vscreen = vscreen;
        this.vsize = vsize;
        this.fps = fps;
        this.bandwidth = bandwidth;
        this.audio = audio;
        this.gwIp = gwIp;
        this.meetnumber = meetnumber;
        this.audiomeetnumber = audiomeetnumber;
        this.conferenceType = conferenceType;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        Conference _r = null;
        try
        {
            _r = (Conference)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(number != _r.number)
            {
                if(number == null || _r.number == null || !number.equals(_r.number))
                {
                    return false;
                }
            }
            if(name != _r.name)
            {
                if(name == null || _r.name == null || !name.equals(_r.name))
                {
                    return false;
                }
            }
            if(e164 != _r.e164)
            {
                if(e164 == null || _r.e164 == null || !e164.equals(_r.e164))
                {
                    return false;
                }
            }
            if(chairpwd != _r.chairpwd)
            {
                if(chairpwd == null || _r.chairpwd == null || !chairpwd.equals(_r.chairpwd))
                {
                    return false;
                }
            }
            if(pwd != _r.pwd)
            {
                if(pwd == null || _r.pwd == null || !pwd.equals(_r.pwd))
                {
                    return false;
                }
            }
            if(starttime != _r.starttime)
            {
                if(starttime == null || _r.starttime == null || !starttime.equals(_r.starttime))
                {
                    return false;
                }
            }
            if(vscreen != _r.vscreen)
            {
                if(vscreen == null || _r.vscreen == null || !vscreen.equals(_r.vscreen))
                {
                    return false;
                }
            }
            if(vsize != _r.vsize)
            {
                if(vsize == null || _r.vsize == null || !vsize.equals(_r.vsize))
                {
                    return false;
                }
            }
            if(fps != _r.fps)
            {
                if(fps == null || _r.fps == null || !fps.equals(_r.fps))
                {
                    return false;
                }
            }
            if(bandwidth != _r.bandwidth)
            {
                if(bandwidth == null || _r.bandwidth == null || !bandwidth.equals(_r.bandwidth))
                {
                    return false;
                }
            }
            if(audio != _r.audio)
            {
                if(audio == null || _r.audio == null || !audio.equals(_r.audio))
                {
                    return false;
                }
            }
            if(gwIp != _r.gwIp)
            {
                if(gwIp == null || _r.gwIp == null || !gwIp.equals(_r.gwIp))
                {
                    return false;
                }
            }
            if(meetnumber != _r.meetnumber)
            {
                if(meetnumber == null || _r.meetnumber == null || !meetnumber.equals(_r.meetnumber))
                {
                    return false;
                }
            }
            if(audiomeetnumber != _r.audiomeetnumber)
            {
                if(audiomeetnumber == null || _r.audiomeetnumber == null || !audiomeetnumber.equals(_r.audiomeetnumber))
                {
                    return false;
                }
            }
            if(conferenceType != _r.conferenceType)
            {
                if(conferenceType == null || _r.conferenceType == null || !conferenceType.equals(_r.conferenceType))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        if(number != null)
        {
            __h = 5 * __h + number.hashCode();
        }
        if(name != null)
        {
            __h = 5 * __h + name.hashCode();
        }
        if(e164 != null)
        {
            __h = 5 * __h + e164.hashCode();
        }
        if(chairpwd != null)
        {
            __h = 5 * __h + chairpwd.hashCode();
        }
        if(pwd != null)
        {
            __h = 5 * __h + pwd.hashCode();
        }
        if(starttime != null)
        {
            __h = 5 * __h + starttime.hashCode();
        }
        if(vscreen != null)
        {
            __h = 5 * __h + vscreen.hashCode();
        }
        if(vsize != null)
        {
            __h = 5 * __h + vsize.hashCode();
        }
        if(fps != null)
        {
            __h = 5 * __h + fps.hashCode();
        }
        if(bandwidth != null)
        {
            __h = 5 * __h + bandwidth.hashCode();
        }
        if(audio != null)
        {
            __h = 5 * __h + audio.hashCode();
        }
        if(gwIp != null)
        {
            __h = 5 * __h + gwIp.hashCode();
        }
        if(meetnumber != null)
        {
            __h = 5 * __h + meetnumber.hashCode();
        }
        if(audiomeetnumber != null)
        {
            __h = 5 * __h + audiomeetnumber.hashCode();
        }
        if(conferenceType != null)
        {
            __h = 5 * __h + conferenceType.hashCode();
        }
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(number);
        __os.writeString(name);
        __os.writeString(e164);
        __os.writeString(chairpwd);
        __os.writeString(pwd);
        __os.writeString(starttime);
        __os.writeString(vscreen);
        __os.writeString(vsize);
        __os.writeString(fps);
        __os.writeString(bandwidth);
        __os.writeString(audio);
        __os.writeString(gwIp);
        __os.writeString(meetnumber);
        __os.writeString(audiomeetnumber);
        __os.writeString(conferenceType);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        number = __is.readString();
        name = __is.readString();
        e164 = __is.readString();
        chairpwd = __is.readString();
        pwd = __is.readString();
        starttime = __is.readString();
        vscreen = __is.readString();
        vsize = __is.readString();
        fps = __is.readString();
        bandwidth = __is.readString();
        audio = __is.readString();
        gwIp = __is.readString();
        meetnumber = __is.readString();
        audiomeetnumber = __is.readString();
        conferenceType = __is.readString();
    }
}
