// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `SipInfo.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.vmediax.oneplusn.ice.api.vmxICE;

public class SipInfo implements java.lang.Cloneable, java.io.Serializable
{
    public int id;

    public String sipIp;

    public String userName;

    public String password;

    public String regServerIP;

    public String domain;

    public String authName;

    public int registerServerStatus;

    public SipInfo()
    {
    }

    public SipInfo(int id, String sipIp, String userName, String password, String regServerIP, String domain, String authName, int registerServerStatus)
    {
        this.id = id;
        this.sipIp = sipIp;
        this.userName = userName;
        this.password = password;
        this.regServerIP = regServerIP;
        this.domain = domain;
        this.authName = authName;
        this.registerServerStatus = registerServerStatus;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        SipInfo _r = null;
        try
        {
            _r = (SipInfo)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                return false;
            }
            if(sipIp != _r.sipIp)
            {
                if(sipIp == null || _r.sipIp == null || !sipIp.equals(_r.sipIp))
                {
                    return false;
                }
            }
            if(userName != _r.userName)
            {
                if(userName == null || _r.userName == null || !userName.equals(_r.userName))
                {
                    return false;
                }
            }
            if(password != _r.password)
            {
                if(password == null || _r.password == null || !password.equals(_r.password))
                {
                    return false;
                }
            }
            if(regServerIP != _r.regServerIP)
            {
                if(regServerIP == null || _r.regServerIP == null || !regServerIP.equals(_r.regServerIP))
                {
                    return false;
                }
            }
            if(domain != _r.domain)
            {
                if(domain == null || _r.domain == null || !domain.equals(_r.domain))
                {
                    return false;
                }
            }
            if(authName != _r.authName)
            {
                if(authName == null || _r.authName == null || !authName.equals(_r.authName))
                {
                    return false;
                }
            }
            if(registerServerStatus != _r.registerServerStatus)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        __h = 5 * __h + id;
        if(sipIp != null)
        {
            __h = 5 * __h + sipIp.hashCode();
        }
        if(userName != null)
        {
            __h = 5 * __h + userName.hashCode();
        }
        if(password != null)
        {
            __h = 5 * __h + password.hashCode();
        }
        if(regServerIP != null)
        {
            __h = 5 * __h + regServerIP.hashCode();
        }
        if(domain != null)
        {
            __h = 5 * __h + domain.hashCode();
        }
        if(authName != null)
        {
            __h = 5 * __h + authName.hashCode();
        }
        __h = 5 * __h + registerServerStatus;
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(id);
        __os.writeString(sipIp);
        __os.writeString(userName);
        __os.writeString(password);
        __os.writeString(regServerIP);
        __os.writeString(domain);
        __os.writeString(authName);
        __os.writeInt(registerServerStatus);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readInt();
        sipIp = __is.readString();
        userName = __is.readString();
        password = __is.readString();
        regServerIP = __is.readString();
        domain = __is.readString();
        authName = __is.readString();
        registerServerStatus = __is.readInt();
    }
}
