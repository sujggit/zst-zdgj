// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `_MC3OperationsNC.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.vmediax.oneplusn.ice.api.vmxICE;

public interface _MC3OperationsNC
{
    CmdResult addTerminal(TerminalInfo ter);

    CmdResult updateTerminal(TerminalInfo ter);

    CmdResult deleteTerminal(String name);

    java.util.List<TerminalInfo> getVedioTerminalList();

    java.util.List<TerminalInfo> getAudioTerminalList();

    java.util.List<TerminalTypeInfo> getTemplateTerminalTypeList(String name);

    java.util.List<TerminalInfo> getTemplateH323TerminList(String templatename);

    java.util.List<TerminalInfo> getTemplateH323IdleTerminList(String templatename);

    java.util.List<TerminalInfo> getTemplateAudioTerminList(String templatename);

    java.util.List<TerminalInfo> getTemplateAudioIdleTerminList(String templatename);

    java.util.List<TemplateInfo> getTemplateList();

    CmdResult addMutiTemplate(MutiTemplateInfo template);

    CmdResult updateMutiTemplate(MutiTemplateInfo template);

    CmdResult deleteMutiTemplate(String templateName);

    java.util.List<LiveMeetTemplate> getLiveMeetTemplateList();

    CmdResult addLiveMeetTemplate(LiveMeetTemplate template);

    CmdResult updateLiveMeetTemplate(LiveMeetTemplate template);

    CmdResult deleteLiveMeetTemplate(String templateName);

    LiveMeetTemplate getLiveMeetTemplate(String templateName);

    java.util.List<TemplateParamInfo> getTemplateParam(String templatename);

    java.util.List<TerminalInfo> getConferenceTerminals(String meetnumber);

    java.util.List<Conference> getConferenceList();

    java.util.List<Conference> getConferenceInfo(String meetnumber);

    java.util.List<ConferenceParam> getConferenceParam(String number);

    int saveConferenceParam(String number, ConferenceParam cp);

    java.util.List<TerminalInfo> getConferenceIdleVedioTerminals(String meetnumber);

    java.util.List<TerminalInfo> getConferenceIdleAudioTerminals(String meetnumber);

    java.util.List<Conference> getConferenceInfoByTerminal(TerminalInfo ter);

    java.util.List<TerminalInfo> getAudioTerminal(String ternumber);

    CmdResult startLiveMeet(String livetemplatename, java.util.List<TerminalInfo> vediotermList, java.util.List<TerminalInfo> audioTermList);

    CmdResult startTemplateMeet(Conference conf, String template);

    CmdResult stopMutiConference(String meetnumber);

    CmdResult inviteVedioTerminal(java.util.List<TerminalInfo> terminalList, String qualityType, Conference conf, MutiTemplateInfo template);

    CmdResult inviteAudioTerminal(java.util.List<TerminalInfo> terminalList, String meetnumber);

    CmdResult kickMutiTerminal(String meetnumber, TerminalInfo ter);

    CmdResult disconnectMutiTerminal(String meetnumber, TerminalInfo ter);

    CmdResult connectMutiTerminal(String meetnumber, TerminalInfo ter);

    CmdResult disconnectAll(String meetnumber);

    CmdResult connectAll(String meetnumber);

    CmdResult muteMutiSpeaker(String meetnumber, TerminalInfo terminal, String speaker);

    CmdResult muteMutiMicrophone(String meetnumber, TerminalInfo terminal, String mic);

    CmdResult muteAllMicrophone(String meetnumber);

    CmdResult openAllMicrophone(String meetnumber);

    CmdResult muteAllSpeaker(String meetnumber);

    CmdResult openAllSpeaker(String meetnumber);

    String getVscreen(String meetnumber);

    java.util.List<ScreenInfo> getScreenInfo(String meetnumber, String vscreen);

    CmdResult setScreen(java.util.List<TerminalInfo> terList, String number, String vscreen, String index, String mode);

    int setQueue(String meetnumber, String index, TerminalInfo ter);

    int setLecture(String meetnumber, TerminalInfo ter, String lecture);

    int setChair(String meetnumber, TerminalInfo ter, String chair);

    CmdResult setChairsee(String meetnumber, String mode, java.util.List<TerminalInfo> terminalList);

    java.util.List<ChairCycleInfo> getChaircycleList(String meetnumber);

    java.util.List<ChairCycleInfo> getChairseeList(String meetnumber);

    int setFecc(String number, TerminalInfo ter, int actionType);

    int stopFecc(String number, TerminalInfo ter);

    int setQualityH323(String number, TerminalInfo ter, String bandwidth, String vsize);

    int setQualitySoft(String number, TerminalInfo ter, String type);

    CmdResult audioInsert(String ternumber1, String ternumberInsert);

    CmdResult audioDismantle(String ternumber);

    CmdResult audioHold(String terIp);

    CmdResult audioUnHold(String terIp);

    CmdResult audioTansfer(String ternumber, String targetnumber);

    CmdResult audioStartSpy(String spyer, String ternumber);

    CmdResult audioStopSpy(String spyer);

    CmdResult audioStartRecord(String ternumber);

    CmdResult audioStopRecord(String ternumber);

    CmdResult powerPickUp(String num1, String targetnum);

    CmdResult callback(String numa, String numb);

    CmdResult consult(String conNum, String targetNum);

    CmdResult meetShift(String meet1, String dstroomid);

    CmdResult setAudioServ(String servip, String username, String pwd);

    java.util.List<PacketInfo> getMemberPacketStatus(String meetnumber);

    /**
     * add by penglong 20130114 gw start
     **/
    CmdResult getServiceMode();

    CmdResult getChannelsInLicenseNumber();

    CmdResult setGWIP(String virtualFromIp, String virtualToIp, String subNetmask);

    CmdResult setFixGWIP(String fixVirtualIp, String subNetmask);

    CmdResult deleteGWIP(String virtualFromIp, String virtualToIp);

    CmdResult deleteFixGWIP(String fixVirtualIp);

    CmdResult clearAllGWIP();

    CmdResult restartServer();

    CmdResult startChannels(Conference channelsInfo);

    CmdResult stopChannels(String channelsNumber);

    java.util.List<Conference> getChannelsList();

    CmdResult callH323Terminal2Channels(TerminalInfo h323Terminal, String number);

    CmdResult disconnectH323Call2Channels(TerminalInfo h323Terminal, String number);

    CmdResult reconnectH323Call2Channels(TerminalInfo h323Terminal, String number);

    CmdResult stopH323Call2Channels(TerminalInfo h323Terminal, String number);

    CmdResult callRtspTerminal2Channels(TerminalInfo rtspTerminal, String number);

    CmdResult stopRtspCall2Channels(TerminalInfo rtspTerminal, String number);

    CmdResult disconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number);

    CmdResult reconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number);

    CmdResult setLogoPath2Channels(String logoPath);
}
