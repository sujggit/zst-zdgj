// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `MC3Prx.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.vmediax.oneplusn.ice.api.vmxICE;

public interface MC3Prx extends Ice.ObjectPrx
{
    public CmdResult addTerminal(TerminalInfo ter);

    public CmdResult addTerminal(TerminalInfo ter, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addTerminal(TerminalInfo ter);

    public Ice.AsyncResult begin_addTerminal(TerminalInfo ter, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addTerminal(TerminalInfo ter, Ice.Callback __cb);

    public Ice.AsyncResult begin_addTerminal(TerminalInfo ter, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_addTerminal(TerminalInfo ter, Callback_MC3_addTerminal __cb);

    public Ice.AsyncResult begin_addTerminal(TerminalInfo ter, java.util.Map<String, String> __ctx, Callback_MC3_addTerminal __cb);

    public CmdResult end_addTerminal(Ice.AsyncResult __result);

    public CmdResult updateTerminal(TerminalInfo ter);

    public CmdResult updateTerminal(TerminalInfo ter, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_updateTerminal(TerminalInfo ter);

    public Ice.AsyncResult begin_updateTerminal(TerminalInfo ter, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_updateTerminal(TerminalInfo ter, Ice.Callback __cb);

    public Ice.AsyncResult begin_updateTerminal(TerminalInfo ter, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_updateTerminal(TerminalInfo ter, Callback_MC3_updateTerminal __cb);

    public Ice.AsyncResult begin_updateTerminal(TerminalInfo ter, java.util.Map<String, String> __ctx, Callback_MC3_updateTerminal __cb);

    public CmdResult end_updateTerminal(Ice.AsyncResult __result);

    public CmdResult deleteTerminal(String name);

    public CmdResult deleteTerminal(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteTerminal(String name);

    public Ice.AsyncResult begin_deleteTerminal(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteTerminal(String name, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteTerminal(String name, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteTerminal(String name, Callback_MC3_deleteTerminal __cb);

    public Ice.AsyncResult begin_deleteTerminal(String name, java.util.Map<String, String> __ctx, Callback_MC3_deleteTerminal __cb);

    public CmdResult end_deleteTerminal(Ice.AsyncResult __result);

    public java.util.List<TerminalInfo> getVedioTerminalList();

    public java.util.List<TerminalInfo> getVedioTerminalList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getVedioTerminalList();

    public Ice.AsyncResult begin_getVedioTerminalList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getVedioTerminalList(Ice.Callback __cb);

    public Ice.AsyncResult begin_getVedioTerminalList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getVedioTerminalList(Callback_MC3_getVedioTerminalList __cb);

    public Ice.AsyncResult begin_getVedioTerminalList(java.util.Map<String, String> __ctx, Callback_MC3_getVedioTerminalList __cb);

    public java.util.List<TerminalInfo> end_getVedioTerminalList(Ice.AsyncResult __result);

    public java.util.List<TerminalInfo> getAudioTerminalList();

    public java.util.List<TerminalInfo> getAudioTerminalList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getAudioTerminalList();

    public Ice.AsyncResult begin_getAudioTerminalList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getAudioTerminalList(Ice.Callback __cb);

    public Ice.AsyncResult begin_getAudioTerminalList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getAudioTerminalList(Callback_MC3_getAudioTerminalList __cb);

    public Ice.AsyncResult begin_getAudioTerminalList(java.util.Map<String, String> __ctx, Callback_MC3_getAudioTerminalList __cb);

    public java.util.List<TerminalInfo> end_getAudioTerminalList(Ice.AsyncResult __result);

    public java.util.List<TerminalTypeInfo> getTemplateTerminalTypeList(String name);

    public java.util.List<TerminalTypeInfo> getTemplateTerminalTypeList(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTemplateTerminalTypeList(String name);

    public Ice.AsyncResult begin_getTemplateTerminalTypeList(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTemplateTerminalTypeList(String name, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTemplateTerminalTypeList(String name, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTemplateTerminalTypeList(String name, Callback_MC3_getTemplateTerminalTypeList __cb);

    public Ice.AsyncResult begin_getTemplateTerminalTypeList(String name, java.util.Map<String, String> __ctx, Callback_MC3_getTemplateTerminalTypeList __cb);

    public java.util.List<TerminalTypeInfo> end_getTemplateTerminalTypeList(Ice.AsyncResult __result);

    public java.util.List<TerminalInfo> getTemplateH323TerminList(String templatename);

    public java.util.List<TerminalInfo> getTemplateH323TerminList(String templatename, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTemplateH323TerminList(String templatename);

    public Ice.AsyncResult begin_getTemplateH323TerminList(String templatename, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTemplateH323TerminList(String templatename, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTemplateH323TerminList(String templatename, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTemplateH323TerminList(String templatename, Callback_MC3_getTemplateH323TerminList __cb);

    public Ice.AsyncResult begin_getTemplateH323TerminList(String templatename, java.util.Map<String, String> __ctx, Callback_MC3_getTemplateH323TerminList __cb);

    public java.util.List<TerminalInfo> end_getTemplateH323TerminList(Ice.AsyncResult __result);

    public java.util.List<TerminalInfo> getTemplateH323IdleTerminList(String templatename);

    public java.util.List<TerminalInfo> getTemplateH323IdleTerminList(String templatename, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTemplateH323IdleTerminList(String templatename);

    public Ice.AsyncResult begin_getTemplateH323IdleTerminList(String templatename, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTemplateH323IdleTerminList(String templatename, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTemplateH323IdleTerminList(String templatename, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTemplateH323IdleTerminList(String templatename, Callback_MC3_getTemplateH323IdleTerminList __cb);

    public Ice.AsyncResult begin_getTemplateH323IdleTerminList(String templatename, java.util.Map<String, String> __ctx, Callback_MC3_getTemplateH323IdleTerminList __cb);

    public java.util.List<TerminalInfo> end_getTemplateH323IdleTerminList(Ice.AsyncResult __result);

    public java.util.List<TerminalInfo> getTemplateAudioTerminList(String templatename);

    public java.util.List<TerminalInfo> getTemplateAudioTerminList(String templatename, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTemplateAudioTerminList(String templatename);

    public Ice.AsyncResult begin_getTemplateAudioTerminList(String templatename, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTemplateAudioTerminList(String templatename, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTemplateAudioTerminList(String templatename, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTemplateAudioTerminList(String templatename, Callback_MC3_getTemplateAudioTerminList __cb);

    public Ice.AsyncResult begin_getTemplateAudioTerminList(String templatename, java.util.Map<String, String> __ctx, Callback_MC3_getTemplateAudioTerminList __cb);

    public java.util.List<TerminalInfo> end_getTemplateAudioTerminList(Ice.AsyncResult __result);

    public java.util.List<TerminalInfo> getTemplateAudioIdleTerminList(String templatename);

    public java.util.List<TerminalInfo> getTemplateAudioIdleTerminList(String templatename, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTemplateAudioIdleTerminList(String templatename);

    public Ice.AsyncResult begin_getTemplateAudioIdleTerminList(String templatename, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTemplateAudioIdleTerminList(String templatename, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTemplateAudioIdleTerminList(String templatename, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTemplateAudioIdleTerminList(String templatename, Callback_MC3_getTemplateAudioIdleTerminList __cb);

    public Ice.AsyncResult begin_getTemplateAudioIdleTerminList(String templatename, java.util.Map<String, String> __ctx, Callback_MC3_getTemplateAudioIdleTerminList __cb);

    public java.util.List<TerminalInfo> end_getTemplateAudioIdleTerminList(Ice.AsyncResult __result);

    public java.util.List<TemplateInfo> getTemplateList();

    public java.util.List<TemplateInfo> getTemplateList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTemplateList();

    public Ice.AsyncResult begin_getTemplateList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTemplateList(Ice.Callback __cb);

    public Ice.AsyncResult begin_getTemplateList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTemplateList(Callback_MC3_getTemplateList __cb);

    public Ice.AsyncResult begin_getTemplateList(java.util.Map<String, String> __ctx, Callback_MC3_getTemplateList __cb);

    public java.util.List<TemplateInfo> end_getTemplateList(Ice.AsyncResult __result);

    public CmdResult addMutiTemplate(MutiTemplateInfo template);

    public CmdResult addMutiTemplate(MutiTemplateInfo template, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addMutiTemplate(MutiTemplateInfo template);

    public Ice.AsyncResult begin_addMutiTemplate(MutiTemplateInfo template, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addMutiTemplate(MutiTemplateInfo template, Ice.Callback __cb);

    public Ice.AsyncResult begin_addMutiTemplate(MutiTemplateInfo template, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_addMutiTemplate(MutiTemplateInfo template, Callback_MC3_addMutiTemplate __cb);

    public Ice.AsyncResult begin_addMutiTemplate(MutiTemplateInfo template, java.util.Map<String, String> __ctx, Callback_MC3_addMutiTemplate __cb);

    public CmdResult end_addMutiTemplate(Ice.AsyncResult __result);

    public CmdResult updateMutiTemplate(MutiTemplateInfo template);

    public CmdResult updateMutiTemplate(MutiTemplateInfo template, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_updateMutiTemplate(MutiTemplateInfo template);

    public Ice.AsyncResult begin_updateMutiTemplate(MutiTemplateInfo template, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_updateMutiTemplate(MutiTemplateInfo template, Ice.Callback __cb);

    public Ice.AsyncResult begin_updateMutiTemplate(MutiTemplateInfo template, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_updateMutiTemplate(MutiTemplateInfo template, Callback_MC3_updateMutiTemplate __cb);

    public Ice.AsyncResult begin_updateMutiTemplate(MutiTemplateInfo template, java.util.Map<String, String> __ctx, Callback_MC3_updateMutiTemplate __cb);

    public CmdResult end_updateMutiTemplate(Ice.AsyncResult __result);

    public CmdResult deleteMutiTemplate(String templateName);

    public CmdResult deleteMutiTemplate(String templateName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteMutiTemplate(String templateName);

    public Ice.AsyncResult begin_deleteMutiTemplate(String templateName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteMutiTemplate(String templateName, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteMutiTemplate(String templateName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteMutiTemplate(String templateName, Callback_MC3_deleteMutiTemplate __cb);

    public Ice.AsyncResult begin_deleteMutiTemplate(String templateName, java.util.Map<String, String> __ctx, Callback_MC3_deleteMutiTemplate __cb);

    public CmdResult end_deleteMutiTemplate(Ice.AsyncResult __result);

    public java.util.List<LiveMeetTemplate> getLiveMeetTemplateList();

    public java.util.List<LiveMeetTemplate> getLiveMeetTemplateList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getLiveMeetTemplateList();

    public Ice.AsyncResult begin_getLiveMeetTemplateList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getLiveMeetTemplateList(Ice.Callback __cb);

    public Ice.AsyncResult begin_getLiveMeetTemplateList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getLiveMeetTemplateList(Callback_MC3_getLiveMeetTemplateList __cb);

    public Ice.AsyncResult begin_getLiveMeetTemplateList(java.util.Map<String, String> __ctx, Callback_MC3_getLiveMeetTemplateList __cb);

    public java.util.List<LiveMeetTemplate> end_getLiveMeetTemplateList(Ice.AsyncResult __result);

    public CmdResult addLiveMeetTemplate(LiveMeetTemplate template);

    public CmdResult addLiveMeetTemplate(LiveMeetTemplate template, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addLiveMeetTemplate(LiveMeetTemplate template);

    public Ice.AsyncResult begin_addLiveMeetTemplate(LiveMeetTemplate template, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addLiveMeetTemplate(LiveMeetTemplate template, Ice.Callback __cb);

    public Ice.AsyncResult begin_addLiveMeetTemplate(LiveMeetTemplate template, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_addLiveMeetTemplate(LiveMeetTemplate template, Callback_MC3_addLiveMeetTemplate __cb);

    public Ice.AsyncResult begin_addLiveMeetTemplate(LiveMeetTemplate template, java.util.Map<String, String> __ctx, Callback_MC3_addLiveMeetTemplate __cb);

    public CmdResult end_addLiveMeetTemplate(Ice.AsyncResult __result);

    public CmdResult updateLiveMeetTemplate(LiveMeetTemplate template);

    public CmdResult updateLiveMeetTemplate(LiveMeetTemplate template, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_updateLiveMeetTemplate(LiveMeetTemplate template);

    public Ice.AsyncResult begin_updateLiveMeetTemplate(LiveMeetTemplate template, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_updateLiveMeetTemplate(LiveMeetTemplate template, Ice.Callback __cb);

    public Ice.AsyncResult begin_updateLiveMeetTemplate(LiveMeetTemplate template, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_updateLiveMeetTemplate(LiveMeetTemplate template, Callback_MC3_updateLiveMeetTemplate __cb);

    public Ice.AsyncResult begin_updateLiveMeetTemplate(LiveMeetTemplate template, java.util.Map<String, String> __ctx, Callback_MC3_updateLiveMeetTemplate __cb);

    public CmdResult end_updateLiveMeetTemplate(Ice.AsyncResult __result);

    public CmdResult deleteLiveMeetTemplate(String templateName);

    public CmdResult deleteLiveMeetTemplate(String templateName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteLiveMeetTemplate(String templateName);

    public Ice.AsyncResult begin_deleteLiveMeetTemplate(String templateName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteLiveMeetTemplate(String templateName, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteLiveMeetTemplate(String templateName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteLiveMeetTemplate(String templateName, Callback_MC3_deleteLiveMeetTemplate __cb);

    public Ice.AsyncResult begin_deleteLiveMeetTemplate(String templateName, java.util.Map<String, String> __ctx, Callback_MC3_deleteLiveMeetTemplate __cb);

    public CmdResult end_deleteLiveMeetTemplate(Ice.AsyncResult __result);

    public LiveMeetTemplate getLiveMeetTemplate(String templateName);

    public LiveMeetTemplate getLiveMeetTemplate(String templateName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getLiveMeetTemplate(String templateName);

    public Ice.AsyncResult begin_getLiveMeetTemplate(String templateName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getLiveMeetTemplate(String templateName, Ice.Callback __cb);

    public Ice.AsyncResult begin_getLiveMeetTemplate(String templateName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getLiveMeetTemplate(String templateName, Callback_MC3_getLiveMeetTemplate __cb);

    public Ice.AsyncResult begin_getLiveMeetTemplate(String templateName, java.util.Map<String, String> __ctx, Callback_MC3_getLiveMeetTemplate __cb);

    public LiveMeetTemplate end_getLiveMeetTemplate(Ice.AsyncResult __result);

    public java.util.List<TemplateParamInfo> getTemplateParam(String templatename);

    public java.util.List<TemplateParamInfo> getTemplateParam(String templatename, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTemplateParam(String templatename);

    public Ice.AsyncResult begin_getTemplateParam(String templatename, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTemplateParam(String templatename, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTemplateParam(String templatename, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTemplateParam(String templatename, Callback_MC3_getTemplateParam __cb);

    public Ice.AsyncResult begin_getTemplateParam(String templatename, java.util.Map<String, String> __ctx, Callback_MC3_getTemplateParam __cb);

    public java.util.List<TemplateParamInfo> end_getTemplateParam(Ice.AsyncResult __result);

    public java.util.List<TerminalInfo> getConferenceTerminals(String meetnumber);

    public java.util.List<TerminalInfo> getConferenceTerminals(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getConferenceTerminals(String meetnumber);

    public Ice.AsyncResult begin_getConferenceTerminals(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getConferenceTerminals(String meetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_getConferenceTerminals(String meetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getConferenceTerminals(String meetnumber, Callback_MC3_getConferenceTerminals __cb);

    public Ice.AsyncResult begin_getConferenceTerminals(String meetnumber, java.util.Map<String, String> __ctx, Callback_MC3_getConferenceTerminals __cb);

    public java.util.List<TerminalInfo> end_getConferenceTerminals(Ice.AsyncResult __result);

    public java.util.List<Conference> getConferenceList();

    public java.util.List<Conference> getConferenceList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getConferenceList();

    public Ice.AsyncResult begin_getConferenceList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getConferenceList(Ice.Callback __cb);

    public Ice.AsyncResult begin_getConferenceList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getConferenceList(Callback_MC3_getConferenceList __cb);

    public Ice.AsyncResult begin_getConferenceList(java.util.Map<String, String> __ctx, Callback_MC3_getConferenceList __cb);

    public java.util.List<Conference> end_getConferenceList(Ice.AsyncResult __result);

    public java.util.List<Conference> getConferenceInfo(String meetnumber);

    public java.util.List<Conference> getConferenceInfo(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getConferenceInfo(String meetnumber);

    public Ice.AsyncResult begin_getConferenceInfo(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getConferenceInfo(String meetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_getConferenceInfo(String meetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getConferenceInfo(String meetnumber, Callback_MC3_getConferenceInfo __cb);

    public Ice.AsyncResult begin_getConferenceInfo(String meetnumber, java.util.Map<String, String> __ctx, Callback_MC3_getConferenceInfo __cb);

    public java.util.List<Conference> end_getConferenceInfo(Ice.AsyncResult __result);

    public java.util.List<ConferenceParam> getConferenceParam(String number);

    public java.util.List<ConferenceParam> getConferenceParam(String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getConferenceParam(String number);

    public Ice.AsyncResult begin_getConferenceParam(String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getConferenceParam(String number, Ice.Callback __cb);

    public Ice.AsyncResult begin_getConferenceParam(String number, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getConferenceParam(String number, Callback_MC3_getConferenceParam __cb);

    public Ice.AsyncResult begin_getConferenceParam(String number, java.util.Map<String, String> __ctx, Callback_MC3_getConferenceParam __cb);

    public java.util.List<ConferenceParam> end_getConferenceParam(Ice.AsyncResult __result);

    public int saveConferenceParam(String number, ConferenceParam cp);

    public int saveConferenceParam(String number, ConferenceParam cp, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_saveConferenceParam(String number, ConferenceParam cp);

    public Ice.AsyncResult begin_saveConferenceParam(String number, ConferenceParam cp, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_saveConferenceParam(String number, ConferenceParam cp, Ice.Callback __cb);

    public Ice.AsyncResult begin_saveConferenceParam(String number, ConferenceParam cp, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_saveConferenceParam(String number, ConferenceParam cp, Callback_MC3_saveConferenceParam __cb);

    public Ice.AsyncResult begin_saveConferenceParam(String number, ConferenceParam cp, java.util.Map<String, String> __ctx, Callback_MC3_saveConferenceParam __cb);

    public int end_saveConferenceParam(Ice.AsyncResult __result);

    public java.util.List<TerminalInfo> getConferenceIdleVedioTerminals(String meetnumber);

    public java.util.List<TerminalInfo> getConferenceIdleVedioTerminals(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getConferenceIdleVedioTerminals(String meetnumber);

    public Ice.AsyncResult begin_getConferenceIdleVedioTerminals(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getConferenceIdleVedioTerminals(String meetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_getConferenceIdleVedioTerminals(String meetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getConferenceIdleVedioTerminals(String meetnumber, Callback_MC3_getConferenceIdleVedioTerminals __cb);

    public Ice.AsyncResult begin_getConferenceIdleVedioTerminals(String meetnumber, java.util.Map<String, String> __ctx, Callback_MC3_getConferenceIdleVedioTerminals __cb);

    public java.util.List<TerminalInfo> end_getConferenceIdleVedioTerminals(Ice.AsyncResult __result);

    public java.util.List<TerminalInfo> getConferenceIdleAudioTerminals(String meetnumber);

    public java.util.List<TerminalInfo> getConferenceIdleAudioTerminals(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getConferenceIdleAudioTerminals(String meetnumber);

    public Ice.AsyncResult begin_getConferenceIdleAudioTerminals(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getConferenceIdleAudioTerminals(String meetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_getConferenceIdleAudioTerminals(String meetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getConferenceIdleAudioTerminals(String meetnumber, Callback_MC3_getConferenceIdleAudioTerminals __cb);

    public Ice.AsyncResult begin_getConferenceIdleAudioTerminals(String meetnumber, java.util.Map<String, String> __ctx, Callback_MC3_getConferenceIdleAudioTerminals __cb);

    public java.util.List<TerminalInfo> end_getConferenceIdleAudioTerminals(Ice.AsyncResult __result);

    public java.util.List<Conference> getConferenceInfoByTerminal(TerminalInfo ter);

    public java.util.List<Conference> getConferenceInfoByTerminal(TerminalInfo ter, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getConferenceInfoByTerminal(TerminalInfo ter);

    public Ice.AsyncResult begin_getConferenceInfoByTerminal(TerminalInfo ter, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getConferenceInfoByTerminal(TerminalInfo ter, Ice.Callback __cb);

    public Ice.AsyncResult begin_getConferenceInfoByTerminal(TerminalInfo ter, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getConferenceInfoByTerminal(TerminalInfo ter, Callback_MC3_getConferenceInfoByTerminal __cb);

    public Ice.AsyncResult begin_getConferenceInfoByTerminal(TerminalInfo ter, java.util.Map<String, String> __ctx, Callback_MC3_getConferenceInfoByTerminal __cb);

    public java.util.List<Conference> end_getConferenceInfoByTerminal(Ice.AsyncResult __result);

    public java.util.List<TerminalInfo> getAudioTerminal(String ternumber);

    public java.util.List<TerminalInfo> getAudioTerminal(String ternumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getAudioTerminal(String ternumber);

    public Ice.AsyncResult begin_getAudioTerminal(String ternumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getAudioTerminal(String ternumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_getAudioTerminal(String ternumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getAudioTerminal(String ternumber, Callback_MC3_getAudioTerminal __cb);

    public Ice.AsyncResult begin_getAudioTerminal(String ternumber, java.util.Map<String, String> __ctx, Callback_MC3_getAudioTerminal __cb);

    public java.util.List<TerminalInfo> end_getAudioTerminal(Ice.AsyncResult __result);

    public CmdResult startLiveMeet(String livetemplatename, java.util.List<TerminalInfo> vediotermList, java.util.List<TerminalInfo> audioTermList);

    public CmdResult startLiveMeet(String livetemplatename, java.util.List<TerminalInfo> vediotermList, java.util.List<TerminalInfo> audioTermList, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_startLiveMeet(String livetemplatename, java.util.List<TerminalInfo> vediotermList, java.util.List<TerminalInfo> audioTermList);

    public Ice.AsyncResult begin_startLiveMeet(String livetemplatename, java.util.List<TerminalInfo> vediotermList, java.util.List<TerminalInfo> audioTermList, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_startLiveMeet(String livetemplatename, java.util.List<TerminalInfo> vediotermList, java.util.List<TerminalInfo> audioTermList, Ice.Callback __cb);

    public Ice.AsyncResult begin_startLiveMeet(String livetemplatename, java.util.List<TerminalInfo> vediotermList, java.util.List<TerminalInfo> audioTermList, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_startLiveMeet(String livetemplatename, java.util.List<TerminalInfo> vediotermList, java.util.List<TerminalInfo> audioTermList, Callback_MC3_startLiveMeet __cb);

    public Ice.AsyncResult begin_startLiveMeet(String livetemplatename, java.util.List<TerminalInfo> vediotermList, java.util.List<TerminalInfo> audioTermList, java.util.Map<String, String> __ctx, Callback_MC3_startLiveMeet __cb);

    public CmdResult end_startLiveMeet(Ice.AsyncResult __result);

    public CmdResult startTemplateMeet(Conference conf, String template);

    public CmdResult startTemplateMeet(Conference conf, String template, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_startTemplateMeet(Conference conf, String template);

    public Ice.AsyncResult begin_startTemplateMeet(Conference conf, String template, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_startTemplateMeet(Conference conf, String template, Ice.Callback __cb);

    public Ice.AsyncResult begin_startTemplateMeet(Conference conf, String template, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_startTemplateMeet(Conference conf, String template, Callback_MC3_startTemplateMeet __cb);

    public Ice.AsyncResult begin_startTemplateMeet(Conference conf, String template, java.util.Map<String, String> __ctx, Callback_MC3_startTemplateMeet __cb);

    public CmdResult end_startTemplateMeet(Ice.AsyncResult __result);

    public CmdResult stopMutiConference(String meetnumber);

    public CmdResult stopMutiConference(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stopMutiConference(String meetnumber);

    public Ice.AsyncResult begin_stopMutiConference(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stopMutiConference(String meetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_stopMutiConference(String meetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_stopMutiConference(String meetnumber, Callback_MC3_stopMutiConference __cb);

    public Ice.AsyncResult begin_stopMutiConference(String meetnumber, java.util.Map<String, String> __ctx, Callback_MC3_stopMutiConference __cb);

    public CmdResult end_stopMutiConference(Ice.AsyncResult __result);

    public CmdResult inviteVedioTerminal(java.util.List<TerminalInfo> terminalList, String qualityType, Conference conf, MutiTemplateInfo template);

    public CmdResult inviteVedioTerminal(java.util.List<TerminalInfo> terminalList, String qualityType, Conference conf, MutiTemplateInfo template, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_inviteVedioTerminal(java.util.List<TerminalInfo> terminalList, String qualityType, Conference conf, MutiTemplateInfo template);

    public Ice.AsyncResult begin_inviteVedioTerminal(java.util.List<TerminalInfo> terminalList, String qualityType, Conference conf, MutiTemplateInfo template, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_inviteVedioTerminal(java.util.List<TerminalInfo> terminalList, String qualityType, Conference conf, MutiTemplateInfo template, Ice.Callback __cb);

    public Ice.AsyncResult begin_inviteVedioTerminal(java.util.List<TerminalInfo> terminalList, String qualityType, Conference conf, MutiTemplateInfo template, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_inviteVedioTerminal(java.util.List<TerminalInfo> terminalList, String qualityType, Conference conf, MutiTemplateInfo template, Callback_MC3_inviteVedioTerminal __cb);

    public Ice.AsyncResult begin_inviteVedioTerminal(java.util.List<TerminalInfo> terminalList, String qualityType, Conference conf, MutiTemplateInfo template, java.util.Map<String, String> __ctx, Callback_MC3_inviteVedioTerminal __cb);

    public CmdResult end_inviteVedioTerminal(Ice.AsyncResult __result);

    public CmdResult inviteAudioTerminal(java.util.List<TerminalInfo> terminalList, String meetnumber);

    public CmdResult inviteAudioTerminal(java.util.List<TerminalInfo> terminalList, String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_inviteAudioTerminal(java.util.List<TerminalInfo> terminalList, String meetnumber);

    public Ice.AsyncResult begin_inviteAudioTerminal(java.util.List<TerminalInfo> terminalList, String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_inviteAudioTerminal(java.util.List<TerminalInfo> terminalList, String meetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_inviteAudioTerminal(java.util.List<TerminalInfo> terminalList, String meetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_inviteAudioTerminal(java.util.List<TerminalInfo> terminalList, String meetnumber, Callback_MC3_inviteAudioTerminal __cb);

    public Ice.AsyncResult begin_inviteAudioTerminal(java.util.List<TerminalInfo> terminalList, String meetnumber, java.util.Map<String, String> __ctx, Callback_MC3_inviteAudioTerminal __cb);

    public CmdResult end_inviteAudioTerminal(Ice.AsyncResult __result);

    public CmdResult kickMutiTerminal(String meetnumber, TerminalInfo ter);

    public CmdResult kickMutiTerminal(String meetnumber, TerminalInfo ter, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_kickMutiTerminal(String meetnumber, TerminalInfo ter);

    public Ice.AsyncResult begin_kickMutiTerminal(String meetnumber, TerminalInfo ter, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_kickMutiTerminal(String meetnumber, TerminalInfo ter, Ice.Callback __cb);

    public Ice.AsyncResult begin_kickMutiTerminal(String meetnumber, TerminalInfo ter, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_kickMutiTerminal(String meetnumber, TerminalInfo ter, Callback_MC3_kickMutiTerminal __cb);

    public Ice.AsyncResult begin_kickMutiTerminal(String meetnumber, TerminalInfo ter, java.util.Map<String, String> __ctx, Callback_MC3_kickMutiTerminal __cb);

    public CmdResult end_kickMutiTerminal(Ice.AsyncResult __result);

    public CmdResult disconnectMutiTerminal(String meetnumber, TerminalInfo ter);

    public CmdResult disconnectMutiTerminal(String meetnumber, TerminalInfo ter, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_disconnectMutiTerminal(String meetnumber, TerminalInfo ter);

    public Ice.AsyncResult begin_disconnectMutiTerminal(String meetnumber, TerminalInfo ter, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_disconnectMutiTerminal(String meetnumber, TerminalInfo ter, Ice.Callback __cb);

    public Ice.AsyncResult begin_disconnectMutiTerminal(String meetnumber, TerminalInfo ter, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_disconnectMutiTerminal(String meetnumber, TerminalInfo ter, Callback_MC3_disconnectMutiTerminal __cb);

    public Ice.AsyncResult begin_disconnectMutiTerminal(String meetnumber, TerminalInfo ter, java.util.Map<String, String> __ctx, Callback_MC3_disconnectMutiTerminal __cb);

    public CmdResult end_disconnectMutiTerminal(Ice.AsyncResult __result);

    public CmdResult connectMutiTerminal(String meetnumber, TerminalInfo ter);

    public CmdResult connectMutiTerminal(String meetnumber, TerminalInfo ter, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_connectMutiTerminal(String meetnumber, TerminalInfo ter);

    public Ice.AsyncResult begin_connectMutiTerminal(String meetnumber, TerminalInfo ter, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_connectMutiTerminal(String meetnumber, TerminalInfo ter, Ice.Callback __cb);

    public Ice.AsyncResult begin_connectMutiTerminal(String meetnumber, TerminalInfo ter, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_connectMutiTerminal(String meetnumber, TerminalInfo ter, Callback_MC3_connectMutiTerminal __cb);

    public Ice.AsyncResult begin_connectMutiTerminal(String meetnumber, TerminalInfo ter, java.util.Map<String, String> __ctx, Callback_MC3_connectMutiTerminal __cb);

    public CmdResult end_connectMutiTerminal(Ice.AsyncResult __result);

    public CmdResult disconnectAll(String meetnumber);

    public CmdResult disconnectAll(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_disconnectAll(String meetnumber);

    public Ice.AsyncResult begin_disconnectAll(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_disconnectAll(String meetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_disconnectAll(String meetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_disconnectAll(String meetnumber, Callback_MC3_disconnectAll __cb);

    public Ice.AsyncResult begin_disconnectAll(String meetnumber, java.util.Map<String, String> __ctx, Callback_MC3_disconnectAll __cb);

    public CmdResult end_disconnectAll(Ice.AsyncResult __result);

    public CmdResult connectAll(String meetnumber);

    public CmdResult connectAll(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_connectAll(String meetnumber);

    public Ice.AsyncResult begin_connectAll(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_connectAll(String meetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_connectAll(String meetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_connectAll(String meetnumber, Callback_MC3_connectAll __cb);

    public Ice.AsyncResult begin_connectAll(String meetnumber, java.util.Map<String, String> __ctx, Callback_MC3_connectAll __cb);

    public CmdResult end_connectAll(Ice.AsyncResult __result);

    public CmdResult muteMutiSpeaker(String meetnumber, TerminalInfo terminal, String speaker);

    public CmdResult muteMutiSpeaker(String meetnumber, TerminalInfo terminal, String speaker, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_muteMutiSpeaker(String meetnumber, TerminalInfo terminal, String speaker);

    public Ice.AsyncResult begin_muteMutiSpeaker(String meetnumber, TerminalInfo terminal, String speaker, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_muteMutiSpeaker(String meetnumber, TerminalInfo terminal, String speaker, Ice.Callback __cb);

    public Ice.AsyncResult begin_muteMutiSpeaker(String meetnumber, TerminalInfo terminal, String speaker, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_muteMutiSpeaker(String meetnumber, TerminalInfo terminal, String speaker, Callback_MC3_muteMutiSpeaker __cb);

    public Ice.AsyncResult begin_muteMutiSpeaker(String meetnumber, TerminalInfo terminal, String speaker, java.util.Map<String, String> __ctx, Callback_MC3_muteMutiSpeaker __cb);

    public CmdResult end_muteMutiSpeaker(Ice.AsyncResult __result);

    public CmdResult muteMutiMicrophone(String meetnumber, TerminalInfo terminal, String mic);

    public CmdResult muteMutiMicrophone(String meetnumber, TerminalInfo terminal, String mic, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_muteMutiMicrophone(String meetnumber, TerminalInfo terminal, String mic);

    public Ice.AsyncResult begin_muteMutiMicrophone(String meetnumber, TerminalInfo terminal, String mic, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_muteMutiMicrophone(String meetnumber, TerminalInfo terminal, String mic, Ice.Callback __cb);

    public Ice.AsyncResult begin_muteMutiMicrophone(String meetnumber, TerminalInfo terminal, String mic, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_muteMutiMicrophone(String meetnumber, TerminalInfo terminal, String mic, Callback_MC3_muteMutiMicrophone __cb);

    public Ice.AsyncResult begin_muteMutiMicrophone(String meetnumber, TerminalInfo terminal, String mic, java.util.Map<String, String> __ctx, Callback_MC3_muteMutiMicrophone __cb);

    public CmdResult end_muteMutiMicrophone(Ice.AsyncResult __result);

    public CmdResult muteAllMicrophone(String meetnumber);

    public CmdResult muteAllMicrophone(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_muteAllMicrophone(String meetnumber);

    public Ice.AsyncResult begin_muteAllMicrophone(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_muteAllMicrophone(String meetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_muteAllMicrophone(String meetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_muteAllMicrophone(String meetnumber, Callback_MC3_muteAllMicrophone __cb);

    public Ice.AsyncResult begin_muteAllMicrophone(String meetnumber, java.util.Map<String, String> __ctx, Callback_MC3_muteAllMicrophone __cb);

    public CmdResult end_muteAllMicrophone(Ice.AsyncResult __result);

    public CmdResult openAllMicrophone(String meetnumber);

    public CmdResult openAllMicrophone(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_openAllMicrophone(String meetnumber);

    public Ice.AsyncResult begin_openAllMicrophone(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_openAllMicrophone(String meetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_openAllMicrophone(String meetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_openAllMicrophone(String meetnumber, Callback_MC3_openAllMicrophone __cb);

    public Ice.AsyncResult begin_openAllMicrophone(String meetnumber, java.util.Map<String, String> __ctx, Callback_MC3_openAllMicrophone __cb);

    public CmdResult end_openAllMicrophone(Ice.AsyncResult __result);

    public CmdResult muteAllSpeaker(String meetnumber);

    public CmdResult muteAllSpeaker(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_muteAllSpeaker(String meetnumber);

    public Ice.AsyncResult begin_muteAllSpeaker(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_muteAllSpeaker(String meetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_muteAllSpeaker(String meetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_muteAllSpeaker(String meetnumber, Callback_MC3_muteAllSpeaker __cb);

    public Ice.AsyncResult begin_muteAllSpeaker(String meetnumber, java.util.Map<String, String> __ctx, Callback_MC3_muteAllSpeaker __cb);

    public CmdResult end_muteAllSpeaker(Ice.AsyncResult __result);

    public CmdResult openAllSpeaker(String meetnumber);

    public CmdResult openAllSpeaker(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_openAllSpeaker(String meetnumber);

    public Ice.AsyncResult begin_openAllSpeaker(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_openAllSpeaker(String meetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_openAllSpeaker(String meetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_openAllSpeaker(String meetnumber, Callback_MC3_openAllSpeaker __cb);

    public Ice.AsyncResult begin_openAllSpeaker(String meetnumber, java.util.Map<String, String> __ctx, Callback_MC3_openAllSpeaker __cb);

    public CmdResult end_openAllSpeaker(Ice.AsyncResult __result);

    public String getVscreen(String meetnumber);

    public String getVscreen(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getVscreen(String meetnumber);

    public Ice.AsyncResult begin_getVscreen(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getVscreen(String meetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_getVscreen(String meetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getVscreen(String meetnumber, Callback_MC3_getVscreen __cb);

    public Ice.AsyncResult begin_getVscreen(String meetnumber, java.util.Map<String, String> __ctx, Callback_MC3_getVscreen __cb);

    public String end_getVscreen(Ice.AsyncResult __result);

    public java.util.List<ScreenInfo> getScreenInfo(String meetnumber, String vscreen);

    public java.util.List<ScreenInfo> getScreenInfo(String meetnumber, String vscreen, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getScreenInfo(String meetnumber, String vscreen);

    public Ice.AsyncResult begin_getScreenInfo(String meetnumber, String vscreen, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getScreenInfo(String meetnumber, String vscreen, Ice.Callback __cb);

    public Ice.AsyncResult begin_getScreenInfo(String meetnumber, String vscreen, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getScreenInfo(String meetnumber, String vscreen, Callback_MC3_getScreenInfo __cb);

    public Ice.AsyncResult begin_getScreenInfo(String meetnumber, String vscreen, java.util.Map<String, String> __ctx, Callback_MC3_getScreenInfo __cb);

    public java.util.List<ScreenInfo> end_getScreenInfo(Ice.AsyncResult __result);

    public CmdResult setScreen(java.util.List<TerminalInfo> terList, String number, String vscreen, String index, String mode);

    public CmdResult setScreen(java.util.List<TerminalInfo> terList, String number, String vscreen, String index, String mode, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setScreen(java.util.List<TerminalInfo> terList, String number, String vscreen, String index, String mode);

    public Ice.AsyncResult begin_setScreen(java.util.List<TerminalInfo> terList, String number, String vscreen, String index, String mode, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setScreen(java.util.List<TerminalInfo> terList, String number, String vscreen, String index, String mode, Ice.Callback __cb);

    public Ice.AsyncResult begin_setScreen(java.util.List<TerminalInfo> terList, String number, String vscreen, String index, String mode, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setScreen(java.util.List<TerminalInfo> terList, String number, String vscreen, String index, String mode, Callback_MC3_setScreen __cb);

    public Ice.AsyncResult begin_setScreen(java.util.List<TerminalInfo> terList, String number, String vscreen, String index, String mode, java.util.Map<String, String> __ctx, Callback_MC3_setScreen __cb);

    public CmdResult end_setScreen(Ice.AsyncResult __result);

    public int setQueue(String meetnumber, String index, TerminalInfo ter);

    public int setQueue(String meetnumber, String index, TerminalInfo ter, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setQueue(String meetnumber, String index, TerminalInfo ter);

    public Ice.AsyncResult begin_setQueue(String meetnumber, String index, TerminalInfo ter, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setQueue(String meetnumber, String index, TerminalInfo ter, Ice.Callback __cb);

    public Ice.AsyncResult begin_setQueue(String meetnumber, String index, TerminalInfo ter, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setQueue(String meetnumber, String index, TerminalInfo ter, Callback_MC3_setQueue __cb);

    public Ice.AsyncResult begin_setQueue(String meetnumber, String index, TerminalInfo ter, java.util.Map<String, String> __ctx, Callback_MC3_setQueue __cb);

    public int end_setQueue(Ice.AsyncResult __result);

    public int setLecture(String meetnumber, TerminalInfo ter, String lecture);

    public int setLecture(String meetnumber, TerminalInfo ter, String lecture, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setLecture(String meetnumber, TerminalInfo ter, String lecture);

    public Ice.AsyncResult begin_setLecture(String meetnumber, TerminalInfo ter, String lecture, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setLecture(String meetnumber, TerminalInfo ter, String lecture, Ice.Callback __cb);

    public Ice.AsyncResult begin_setLecture(String meetnumber, TerminalInfo ter, String lecture, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setLecture(String meetnumber, TerminalInfo ter, String lecture, Callback_MC3_setLecture __cb);

    public Ice.AsyncResult begin_setLecture(String meetnumber, TerminalInfo ter, String lecture, java.util.Map<String, String> __ctx, Callback_MC3_setLecture __cb);

    public int end_setLecture(Ice.AsyncResult __result);

    public int setChair(String meetnumber, TerminalInfo ter, String chair);

    public int setChair(String meetnumber, TerminalInfo ter, String chair, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setChair(String meetnumber, TerminalInfo ter, String chair);

    public Ice.AsyncResult begin_setChair(String meetnumber, TerminalInfo ter, String chair, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setChair(String meetnumber, TerminalInfo ter, String chair, Ice.Callback __cb);

    public Ice.AsyncResult begin_setChair(String meetnumber, TerminalInfo ter, String chair, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setChair(String meetnumber, TerminalInfo ter, String chair, Callback_MC3_setChair __cb);

    public Ice.AsyncResult begin_setChair(String meetnumber, TerminalInfo ter, String chair, java.util.Map<String, String> __ctx, Callback_MC3_setChair __cb);

    public int end_setChair(Ice.AsyncResult __result);

    public CmdResult setChairsee(String meetnumber, String mode, java.util.List<TerminalInfo> terminalList);

    public CmdResult setChairsee(String meetnumber, String mode, java.util.List<TerminalInfo> terminalList, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setChairsee(String meetnumber, String mode, java.util.List<TerminalInfo> terminalList);

    public Ice.AsyncResult begin_setChairsee(String meetnumber, String mode, java.util.List<TerminalInfo> terminalList, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setChairsee(String meetnumber, String mode, java.util.List<TerminalInfo> terminalList, Ice.Callback __cb);

    public Ice.AsyncResult begin_setChairsee(String meetnumber, String mode, java.util.List<TerminalInfo> terminalList, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setChairsee(String meetnumber, String mode, java.util.List<TerminalInfo> terminalList, Callback_MC3_setChairsee __cb);

    public Ice.AsyncResult begin_setChairsee(String meetnumber, String mode, java.util.List<TerminalInfo> terminalList, java.util.Map<String, String> __ctx, Callback_MC3_setChairsee __cb);

    public CmdResult end_setChairsee(Ice.AsyncResult __result);

    public java.util.List<ChairCycleInfo> getChaircycleList(String meetnumber);

    public java.util.List<ChairCycleInfo> getChaircycleList(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getChaircycleList(String meetnumber);

    public Ice.AsyncResult begin_getChaircycleList(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getChaircycleList(String meetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_getChaircycleList(String meetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getChaircycleList(String meetnumber, Callback_MC3_getChaircycleList __cb);

    public Ice.AsyncResult begin_getChaircycleList(String meetnumber, java.util.Map<String, String> __ctx, Callback_MC3_getChaircycleList __cb);

    public java.util.List<ChairCycleInfo> end_getChaircycleList(Ice.AsyncResult __result);

    public java.util.List<ChairCycleInfo> getChairseeList(String meetnumber);

    public java.util.List<ChairCycleInfo> getChairseeList(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getChairseeList(String meetnumber);

    public Ice.AsyncResult begin_getChairseeList(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getChairseeList(String meetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_getChairseeList(String meetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getChairseeList(String meetnumber, Callback_MC3_getChairseeList __cb);

    public Ice.AsyncResult begin_getChairseeList(String meetnumber, java.util.Map<String, String> __ctx, Callback_MC3_getChairseeList __cb);

    public java.util.List<ChairCycleInfo> end_getChairseeList(Ice.AsyncResult __result);

    public int setFecc(String number, TerminalInfo ter, int actionType);

    public int setFecc(String number, TerminalInfo ter, int actionType, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setFecc(String number, TerminalInfo ter, int actionType);

    public Ice.AsyncResult begin_setFecc(String number, TerminalInfo ter, int actionType, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setFecc(String number, TerminalInfo ter, int actionType, Ice.Callback __cb);

    public Ice.AsyncResult begin_setFecc(String number, TerminalInfo ter, int actionType, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setFecc(String number, TerminalInfo ter, int actionType, Callback_MC3_setFecc __cb);

    public Ice.AsyncResult begin_setFecc(String number, TerminalInfo ter, int actionType, java.util.Map<String, String> __ctx, Callback_MC3_setFecc __cb);

    public int end_setFecc(Ice.AsyncResult __result);

    public int stopFecc(String number, TerminalInfo ter);

    public int stopFecc(String number, TerminalInfo ter, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stopFecc(String number, TerminalInfo ter);

    public Ice.AsyncResult begin_stopFecc(String number, TerminalInfo ter, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stopFecc(String number, TerminalInfo ter, Ice.Callback __cb);

    public Ice.AsyncResult begin_stopFecc(String number, TerminalInfo ter, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_stopFecc(String number, TerminalInfo ter, Callback_MC3_stopFecc __cb);

    public Ice.AsyncResult begin_stopFecc(String number, TerminalInfo ter, java.util.Map<String, String> __ctx, Callback_MC3_stopFecc __cb);

    public int end_stopFecc(Ice.AsyncResult __result);

    public int setQualityH323(String number, TerminalInfo ter, String bandwidth, String vsize);

    public int setQualityH323(String number, TerminalInfo ter, String bandwidth, String vsize, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setQualityH323(String number, TerminalInfo ter, String bandwidth, String vsize);

    public Ice.AsyncResult begin_setQualityH323(String number, TerminalInfo ter, String bandwidth, String vsize, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setQualityH323(String number, TerminalInfo ter, String bandwidth, String vsize, Ice.Callback __cb);

    public Ice.AsyncResult begin_setQualityH323(String number, TerminalInfo ter, String bandwidth, String vsize, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setQualityH323(String number, TerminalInfo ter, String bandwidth, String vsize, Callback_MC3_setQualityH323 __cb);

    public Ice.AsyncResult begin_setQualityH323(String number, TerminalInfo ter, String bandwidth, String vsize, java.util.Map<String, String> __ctx, Callback_MC3_setQualityH323 __cb);

    public int end_setQualityH323(Ice.AsyncResult __result);

    public int setQualitySoft(String number, TerminalInfo ter, String type);

    public int setQualitySoft(String number, TerminalInfo ter, String type, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setQualitySoft(String number, TerminalInfo ter, String type);

    public Ice.AsyncResult begin_setQualitySoft(String number, TerminalInfo ter, String type, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setQualitySoft(String number, TerminalInfo ter, String type, Ice.Callback __cb);

    public Ice.AsyncResult begin_setQualitySoft(String number, TerminalInfo ter, String type, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setQualitySoft(String number, TerminalInfo ter, String type, Callback_MC3_setQualitySoft __cb);

    public Ice.AsyncResult begin_setQualitySoft(String number, TerminalInfo ter, String type, java.util.Map<String, String> __ctx, Callback_MC3_setQualitySoft __cb);

    public int end_setQualitySoft(Ice.AsyncResult __result);

    public CmdResult audioInsert(String ternumber1, String ternumberInsert);

    public CmdResult audioInsert(String ternumber1, String ternumberInsert, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioInsert(String ternumber1, String ternumberInsert);

    public Ice.AsyncResult begin_audioInsert(String ternumber1, String ternumberInsert, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioInsert(String ternumber1, String ternumberInsert, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioInsert(String ternumber1, String ternumberInsert, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioInsert(String ternumber1, String ternumberInsert, Callback_MC3_audioInsert __cb);

    public Ice.AsyncResult begin_audioInsert(String ternumber1, String ternumberInsert, java.util.Map<String, String> __ctx, Callback_MC3_audioInsert __cb);

    public CmdResult end_audioInsert(Ice.AsyncResult __result);

    public CmdResult audioDismantle(String ternumber);

    public CmdResult audioDismantle(String ternumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioDismantle(String ternumber);

    public Ice.AsyncResult begin_audioDismantle(String ternumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioDismantle(String ternumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioDismantle(String ternumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioDismantle(String ternumber, Callback_MC3_audioDismantle __cb);

    public Ice.AsyncResult begin_audioDismantle(String ternumber, java.util.Map<String, String> __ctx, Callback_MC3_audioDismantle __cb);

    public CmdResult end_audioDismantle(Ice.AsyncResult __result);

    public CmdResult audioHold(String terIp);

    public CmdResult audioHold(String terIp, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioHold(String terIp);

    public Ice.AsyncResult begin_audioHold(String terIp, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioHold(String terIp, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioHold(String terIp, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioHold(String terIp, Callback_MC3_audioHold __cb);

    public Ice.AsyncResult begin_audioHold(String terIp, java.util.Map<String, String> __ctx, Callback_MC3_audioHold __cb);

    public CmdResult end_audioHold(Ice.AsyncResult __result);

    public CmdResult audioUnHold(String terIp);

    public CmdResult audioUnHold(String terIp, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioUnHold(String terIp);

    public Ice.AsyncResult begin_audioUnHold(String terIp, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioUnHold(String terIp, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioUnHold(String terIp, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioUnHold(String terIp, Callback_MC3_audioUnHold __cb);

    public Ice.AsyncResult begin_audioUnHold(String terIp, java.util.Map<String, String> __ctx, Callback_MC3_audioUnHold __cb);

    public CmdResult end_audioUnHold(Ice.AsyncResult __result);

    public CmdResult audioTansfer(String ternumber, String targetnumber);

    public CmdResult audioTansfer(String ternumber, String targetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioTansfer(String ternumber, String targetnumber);

    public Ice.AsyncResult begin_audioTansfer(String ternumber, String targetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioTansfer(String ternumber, String targetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioTansfer(String ternumber, String targetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioTansfer(String ternumber, String targetnumber, Callback_MC3_audioTansfer __cb);

    public Ice.AsyncResult begin_audioTansfer(String ternumber, String targetnumber, java.util.Map<String, String> __ctx, Callback_MC3_audioTansfer __cb);

    public CmdResult end_audioTansfer(Ice.AsyncResult __result);

    public CmdResult audioStartSpy(String spyer, String ternumber);

    public CmdResult audioStartSpy(String spyer, String ternumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioStartSpy(String spyer, String ternumber);

    public Ice.AsyncResult begin_audioStartSpy(String spyer, String ternumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioStartSpy(String spyer, String ternumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioStartSpy(String spyer, String ternumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioStartSpy(String spyer, String ternumber, Callback_MC3_audioStartSpy __cb);

    public Ice.AsyncResult begin_audioStartSpy(String spyer, String ternumber, java.util.Map<String, String> __ctx, Callback_MC3_audioStartSpy __cb);

    public CmdResult end_audioStartSpy(Ice.AsyncResult __result);

    public CmdResult audioStopSpy(String spyer);

    public CmdResult audioStopSpy(String spyer, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioStopSpy(String spyer);

    public Ice.AsyncResult begin_audioStopSpy(String spyer, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioStopSpy(String spyer, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioStopSpy(String spyer, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioStopSpy(String spyer, Callback_MC3_audioStopSpy __cb);

    public Ice.AsyncResult begin_audioStopSpy(String spyer, java.util.Map<String, String> __ctx, Callback_MC3_audioStopSpy __cb);

    public CmdResult end_audioStopSpy(Ice.AsyncResult __result);

    public CmdResult audioStartRecord(String ternumber);

    public CmdResult audioStartRecord(String ternumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioStartRecord(String ternumber);

    public Ice.AsyncResult begin_audioStartRecord(String ternumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioStartRecord(String ternumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioStartRecord(String ternumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioStartRecord(String ternumber, Callback_MC3_audioStartRecord __cb);

    public Ice.AsyncResult begin_audioStartRecord(String ternumber, java.util.Map<String, String> __ctx, Callback_MC3_audioStartRecord __cb);

    public CmdResult end_audioStartRecord(Ice.AsyncResult __result);

    public CmdResult audioStopRecord(String ternumber);

    public CmdResult audioStopRecord(String ternumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioStopRecord(String ternumber);

    public Ice.AsyncResult begin_audioStopRecord(String ternumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_audioStopRecord(String ternumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioStopRecord(String ternumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_audioStopRecord(String ternumber, Callback_MC3_audioStopRecord __cb);

    public Ice.AsyncResult begin_audioStopRecord(String ternumber, java.util.Map<String, String> __ctx, Callback_MC3_audioStopRecord __cb);

    public CmdResult end_audioStopRecord(Ice.AsyncResult __result);

    public CmdResult powerPickUp(String num1, String targetnum);

    public CmdResult powerPickUp(String num1, String targetnum, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_powerPickUp(String num1, String targetnum);

    public Ice.AsyncResult begin_powerPickUp(String num1, String targetnum, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_powerPickUp(String num1, String targetnum, Ice.Callback __cb);

    public Ice.AsyncResult begin_powerPickUp(String num1, String targetnum, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_powerPickUp(String num1, String targetnum, Callback_MC3_powerPickUp __cb);

    public Ice.AsyncResult begin_powerPickUp(String num1, String targetnum, java.util.Map<String, String> __ctx, Callback_MC3_powerPickUp __cb);

    public CmdResult end_powerPickUp(Ice.AsyncResult __result);

    public CmdResult callback(String numa, String numb);

    public CmdResult callback(String numa, String numb, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_callback(String numa, String numb);

    public Ice.AsyncResult begin_callback(String numa, String numb, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_callback(String numa, String numb, Ice.Callback __cb);

    public Ice.AsyncResult begin_callback(String numa, String numb, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_callback(String numa, String numb, Callback_MC3_callback __cb);

    public Ice.AsyncResult begin_callback(String numa, String numb, java.util.Map<String, String> __ctx, Callback_MC3_callback __cb);

    public CmdResult end_callback(Ice.AsyncResult __result);

    public CmdResult consult(String conNum, String targetNum);

    public CmdResult consult(String conNum, String targetNum, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_consult(String conNum, String targetNum);

    public Ice.AsyncResult begin_consult(String conNum, String targetNum, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_consult(String conNum, String targetNum, Ice.Callback __cb);

    public Ice.AsyncResult begin_consult(String conNum, String targetNum, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_consult(String conNum, String targetNum, Callback_MC3_consult __cb);

    public Ice.AsyncResult begin_consult(String conNum, String targetNum, java.util.Map<String, String> __ctx, Callback_MC3_consult __cb);

    public CmdResult end_consult(Ice.AsyncResult __result);

    public CmdResult meetShift(String meet1, String dstroomid);

    public CmdResult meetShift(String meet1, String dstroomid, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_meetShift(String meet1, String dstroomid);

    public Ice.AsyncResult begin_meetShift(String meet1, String dstroomid, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_meetShift(String meet1, String dstroomid, Ice.Callback __cb);

    public Ice.AsyncResult begin_meetShift(String meet1, String dstroomid, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_meetShift(String meet1, String dstroomid, Callback_MC3_meetShift __cb);

    public Ice.AsyncResult begin_meetShift(String meet1, String dstroomid, java.util.Map<String, String> __ctx, Callback_MC3_meetShift __cb);

    public CmdResult end_meetShift(Ice.AsyncResult __result);

    public CmdResult setAudioServ(String servip, String username, String pwd);

    public CmdResult setAudioServ(String servip, String username, String pwd, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setAudioServ(String servip, String username, String pwd);

    public Ice.AsyncResult begin_setAudioServ(String servip, String username, String pwd, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setAudioServ(String servip, String username, String pwd, Ice.Callback __cb);

    public Ice.AsyncResult begin_setAudioServ(String servip, String username, String pwd, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setAudioServ(String servip, String username, String pwd, Callback_MC3_setAudioServ __cb);

    public Ice.AsyncResult begin_setAudioServ(String servip, String username, String pwd, java.util.Map<String, String> __ctx, Callback_MC3_setAudioServ __cb);

    public CmdResult end_setAudioServ(Ice.AsyncResult __result);

    public java.util.List<PacketInfo> getMemberPacketStatus(String meetnumber);

    public java.util.List<PacketInfo> getMemberPacketStatus(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getMemberPacketStatus(String meetnumber);

    public Ice.AsyncResult begin_getMemberPacketStatus(String meetnumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getMemberPacketStatus(String meetnumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_getMemberPacketStatus(String meetnumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getMemberPacketStatus(String meetnumber, Callback_MC3_getMemberPacketStatus __cb);

    public Ice.AsyncResult begin_getMemberPacketStatus(String meetnumber, java.util.Map<String, String> __ctx, Callback_MC3_getMemberPacketStatus __cb);

    public java.util.List<PacketInfo> end_getMemberPacketStatus(Ice.AsyncResult __result);

    /**
     * add by penglong 20130114 gw start
     **/
    public CmdResult getServiceMode();

    /**
     * add by penglong 20130114 gw start
     * @param __ctx The Context map to send with the invocation.
     **/
    public CmdResult getServiceMode(java.util.Map<String, String> __ctx);

    /**
     * add by penglong 20130114 gw start
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getServiceMode();

    /**
     * add by penglong 20130114 gw start
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getServiceMode(java.util.Map<String, String> __ctx);

    /**
     * add by penglong 20130114 gw start
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getServiceMode(Ice.Callback __cb);

    /**
     * add by penglong 20130114 gw start
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getServiceMode(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * add by penglong 20130114 gw start
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getServiceMode(Callback_MC3_getServiceMode __cb);

    /**
     * add by penglong 20130114 gw start
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getServiceMode(java.util.Map<String, String> __ctx, Callback_MC3_getServiceMode __cb);

    /**
     * add by penglong 20130114 gw start
     * @param __result The asynchronous result object.
     **/
    public CmdResult end_getServiceMode(Ice.AsyncResult __result);

    public CmdResult getChannelsInLicenseNumber();

    public CmdResult getChannelsInLicenseNumber(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getChannelsInLicenseNumber();

    public Ice.AsyncResult begin_getChannelsInLicenseNumber(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getChannelsInLicenseNumber(Ice.Callback __cb);

    public Ice.AsyncResult begin_getChannelsInLicenseNumber(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getChannelsInLicenseNumber(Callback_MC3_getChannelsInLicenseNumber __cb);

    public Ice.AsyncResult begin_getChannelsInLicenseNumber(java.util.Map<String, String> __ctx, Callback_MC3_getChannelsInLicenseNumber __cb);

    public CmdResult end_getChannelsInLicenseNumber(Ice.AsyncResult __result);

    public CmdResult setGWIP(String virtualFromIp, String virtualToIp, String subNetmask);

    public CmdResult setGWIP(String virtualFromIp, String virtualToIp, String subNetmask, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setGWIP(String virtualFromIp, String virtualToIp, String subNetmask);

    public Ice.AsyncResult begin_setGWIP(String virtualFromIp, String virtualToIp, String subNetmask, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setGWIP(String virtualFromIp, String virtualToIp, String subNetmask, Ice.Callback __cb);

    public Ice.AsyncResult begin_setGWIP(String virtualFromIp, String virtualToIp, String subNetmask, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setGWIP(String virtualFromIp, String virtualToIp, String subNetmask, Callback_MC3_setGWIP __cb);

    public Ice.AsyncResult begin_setGWIP(String virtualFromIp, String virtualToIp, String subNetmask, java.util.Map<String, String> __ctx, Callback_MC3_setGWIP __cb);

    public CmdResult end_setGWIP(Ice.AsyncResult __result);

    public CmdResult setFixGWIP(String fixVirtualIp, String subNetmask);

    public CmdResult setFixGWIP(String fixVirtualIp, String subNetmask, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setFixGWIP(String fixVirtualIp, String subNetmask);

    public Ice.AsyncResult begin_setFixGWIP(String fixVirtualIp, String subNetmask, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setFixGWIP(String fixVirtualIp, String subNetmask, Ice.Callback __cb);

    public Ice.AsyncResult begin_setFixGWIP(String fixVirtualIp, String subNetmask, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setFixGWIP(String fixVirtualIp, String subNetmask, Callback_MC3_setFixGWIP __cb);

    public Ice.AsyncResult begin_setFixGWIP(String fixVirtualIp, String subNetmask, java.util.Map<String, String> __ctx, Callback_MC3_setFixGWIP __cb);

    public CmdResult end_setFixGWIP(Ice.AsyncResult __result);

    public CmdResult deleteGWIP(String virtualFromIp, String virtualToIp);

    public CmdResult deleteGWIP(String virtualFromIp, String virtualToIp, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteGWIP(String virtualFromIp, String virtualToIp);

    public Ice.AsyncResult begin_deleteGWIP(String virtualFromIp, String virtualToIp, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteGWIP(String virtualFromIp, String virtualToIp, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteGWIP(String virtualFromIp, String virtualToIp, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteGWIP(String virtualFromIp, String virtualToIp, Callback_MC3_deleteGWIP __cb);

    public Ice.AsyncResult begin_deleteGWIP(String virtualFromIp, String virtualToIp, java.util.Map<String, String> __ctx, Callback_MC3_deleteGWIP __cb);

    public CmdResult end_deleteGWIP(Ice.AsyncResult __result);

    public CmdResult deleteFixGWIP(String fixVirtualIp);

    public CmdResult deleteFixGWIP(String fixVirtualIp, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteFixGWIP(String fixVirtualIp);

    public Ice.AsyncResult begin_deleteFixGWIP(String fixVirtualIp, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteFixGWIP(String fixVirtualIp, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteFixGWIP(String fixVirtualIp, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteFixGWIP(String fixVirtualIp, Callback_MC3_deleteFixGWIP __cb);

    public Ice.AsyncResult begin_deleteFixGWIP(String fixVirtualIp, java.util.Map<String, String> __ctx, Callback_MC3_deleteFixGWIP __cb);

    public CmdResult end_deleteFixGWIP(Ice.AsyncResult __result);

    public CmdResult clearAllGWIP();

    public CmdResult clearAllGWIP(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_clearAllGWIP();

    public Ice.AsyncResult begin_clearAllGWIP(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_clearAllGWIP(Ice.Callback __cb);

    public Ice.AsyncResult begin_clearAllGWIP(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_clearAllGWIP(Callback_MC3_clearAllGWIP __cb);

    public Ice.AsyncResult begin_clearAllGWIP(java.util.Map<String, String> __ctx, Callback_MC3_clearAllGWIP __cb);

    public CmdResult end_clearAllGWIP(Ice.AsyncResult __result);

    public CmdResult restartServer();

    public CmdResult restartServer(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_restartServer();

    public Ice.AsyncResult begin_restartServer(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_restartServer(Ice.Callback __cb);

    public Ice.AsyncResult begin_restartServer(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_restartServer(Callback_MC3_restartServer __cb);

    public Ice.AsyncResult begin_restartServer(java.util.Map<String, String> __ctx, Callback_MC3_restartServer __cb);

    public CmdResult end_restartServer(Ice.AsyncResult __result);

    public CmdResult startChannels(Conference channelsInfo);

    public CmdResult startChannels(Conference channelsInfo, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_startChannels(Conference channelsInfo);

    public Ice.AsyncResult begin_startChannels(Conference channelsInfo, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_startChannels(Conference channelsInfo, Ice.Callback __cb);

    public Ice.AsyncResult begin_startChannels(Conference channelsInfo, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_startChannels(Conference channelsInfo, Callback_MC3_startChannels __cb);

    public Ice.AsyncResult begin_startChannels(Conference channelsInfo, java.util.Map<String, String> __ctx, Callback_MC3_startChannels __cb);

    public CmdResult end_startChannels(Ice.AsyncResult __result);

    public CmdResult stopChannels(String channelsNumber);

    public CmdResult stopChannels(String channelsNumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stopChannels(String channelsNumber);

    public Ice.AsyncResult begin_stopChannels(String channelsNumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stopChannels(String channelsNumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_stopChannels(String channelsNumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_stopChannels(String channelsNumber, Callback_MC3_stopChannels __cb);

    public Ice.AsyncResult begin_stopChannels(String channelsNumber, java.util.Map<String, String> __ctx, Callback_MC3_stopChannels __cb);

    public CmdResult end_stopChannels(Ice.AsyncResult __result);

    public java.util.List<Conference> getChannelsList();

    public java.util.List<Conference> getChannelsList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getChannelsList();

    public Ice.AsyncResult begin_getChannelsList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getChannelsList(Ice.Callback __cb);

    public Ice.AsyncResult begin_getChannelsList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getChannelsList(Callback_MC3_getChannelsList __cb);

    public Ice.AsyncResult begin_getChannelsList(java.util.Map<String, String> __ctx, Callback_MC3_getChannelsList __cb);

    public java.util.List<Conference> end_getChannelsList(Ice.AsyncResult __result);

    public CmdResult callH323Terminal2Channels(TerminalInfo h323Terminal, String number);

    public CmdResult callH323Terminal2Channels(TerminalInfo h323Terminal, String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_callH323Terminal2Channels(TerminalInfo h323Terminal, String number);

    public Ice.AsyncResult begin_callH323Terminal2Channels(TerminalInfo h323Terminal, String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_callH323Terminal2Channels(TerminalInfo h323Terminal, String number, Ice.Callback __cb);

    public Ice.AsyncResult begin_callH323Terminal2Channels(TerminalInfo h323Terminal, String number, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_callH323Terminal2Channels(TerminalInfo h323Terminal, String number, Callback_MC3_callH323Terminal2Channels __cb);

    public Ice.AsyncResult begin_callH323Terminal2Channels(TerminalInfo h323Terminal, String number, java.util.Map<String, String> __ctx, Callback_MC3_callH323Terminal2Channels __cb);

    public CmdResult end_callH323Terminal2Channels(Ice.AsyncResult __result);

    public CmdResult disconnectH323Call2Channels(TerminalInfo h323Terminal, String number);

    public CmdResult disconnectH323Call2Channels(TerminalInfo h323Terminal, String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_disconnectH323Call2Channels(TerminalInfo h323Terminal, String number);

    public Ice.AsyncResult begin_disconnectH323Call2Channels(TerminalInfo h323Terminal, String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_disconnectH323Call2Channels(TerminalInfo h323Terminal, String number, Ice.Callback __cb);

    public Ice.AsyncResult begin_disconnectH323Call2Channels(TerminalInfo h323Terminal, String number, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_disconnectH323Call2Channels(TerminalInfo h323Terminal, String number, Callback_MC3_disconnectH323Call2Channels __cb);

    public Ice.AsyncResult begin_disconnectH323Call2Channels(TerminalInfo h323Terminal, String number, java.util.Map<String, String> __ctx, Callback_MC3_disconnectH323Call2Channels __cb);

    public CmdResult end_disconnectH323Call2Channels(Ice.AsyncResult __result);

    public CmdResult reconnectH323Call2Channels(TerminalInfo h323Terminal, String number);

    public CmdResult reconnectH323Call2Channels(TerminalInfo h323Terminal, String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_reconnectH323Call2Channels(TerminalInfo h323Terminal, String number);

    public Ice.AsyncResult begin_reconnectH323Call2Channels(TerminalInfo h323Terminal, String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_reconnectH323Call2Channels(TerminalInfo h323Terminal, String number, Ice.Callback __cb);

    public Ice.AsyncResult begin_reconnectH323Call2Channels(TerminalInfo h323Terminal, String number, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_reconnectH323Call2Channels(TerminalInfo h323Terminal, String number, Callback_MC3_reconnectH323Call2Channels __cb);

    public Ice.AsyncResult begin_reconnectH323Call2Channels(TerminalInfo h323Terminal, String number, java.util.Map<String, String> __ctx, Callback_MC3_reconnectH323Call2Channels __cb);

    public CmdResult end_reconnectH323Call2Channels(Ice.AsyncResult __result);

    public CmdResult stopH323Call2Channels(TerminalInfo h323Terminal, String number);

    public CmdResult stopH323Call2Channels(TerminalInfo h323Terminal, String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stopH323Call2Channels(TerminalInfo h323Terminal, String number);

    public Ice.AsyncResult begin_stopH323Call2Channels(TerminalInfo h323Terminal, String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stopH323Call2Channels(TerminalInfo h323Terminal, String number, Ice.Callback __cb);

    public Ice.AsyncResult begin_stopH323Call2Channels(TerminalInfo h323Terminal, String number, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_stopH323Call2Channels(TerminalInfo h323Terminal, String number, Callback_MC3_stopH323Call2Channels __cb);

    public Ice.AsyncResult begin_stopH323Call2Channels(TerminalInfo h323Terminal, String number, java.util.Map<String, String> __ctx, Callback_MC3_stopH323Call2Channels __cb);

    public CmdResult end_stopH323Call2Channels(Ice.AsyncResult __result);

    public CmdResult callRtspTerminal2Channels(TerminalInfo rtspTerminal, String number);

    public CmdResult callRtspTerminal2Channels(TerminalInfo rtspTerminal, String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_callRtspTerminal2Channels(TerminalInfo rtspTerminal, String number);

    public Ice.AsyncResult begin_callRtspTerminal2Channels(TerminalInfo rtspTerminal, String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_callRtspTerminal2Channels(TerminalInfo rtspTerminal, String number, Ice.Callback __cb);

    public Ice.AsyncResult begin_callRtspTerminal2Channels(TerminalInfo rtspTerminal, String number, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_callRtspTerminal2Channels(TerminalInfo rtspTerminal, String number, Callback_MC3_callRtspTerminal2Channels __cb);

    public Ice.AsyncResult begin_callRtspTerminal2Channels(TerminalInfo rtspTerminal, String number, java.util.Map<String, String> __ctx, Callback_MC3_callRtspTerminal2Channels __cb);

    public CmdResult end_callRtspTerminal2Channels(Ice.AsyncResult __result);

    public CmdResult stopRtspCall2Channels(TerminalInfo rtspTerminal, String number);

    public CmdResult stopRtspCall2Channels(TerminalInfo rtspTerminal, String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stopRtspCall2Channels(TerminalInfo rtspTerminal, String number);

    public Ice.AsyncResult begin_stopRtspCall2Channels(TerminalInfo rtspTerminal, String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stopRtspCall2Channels(TerminalInfo rtspTerminal, String number, Ice.Callback __cb);

    public Ice.AsyncResult begin_stopRtspCall2Channels(TerminalInfo rtspTerminal, String number, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_stopRtspCall2Channels(TerminalInfo rtspTerminal, String number, Callback_MC3_stopRtspCall2Channels __cb);

    public Ice.AsyncResult begin_stopRtspCall2Channels(TerminalInfo rtspTerminal, String number, java.util.Map<String, String> __ctx, Callback_MC3_stopRtspCall2Channels __cb);

    public CmdResult end_stopRtspCall2Channels(Ice.AsyncResult __result);

    public CmdResult disconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number);

    public CmdResult disconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_disconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number);

    public Ice.AsyncResult begin_disconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_disconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number, Ice.Callback __cb);

    public Ice.AsyncResult begin_disconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_disconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number, Callback_MC3_disconnectRtspCall2Channels __cb);

    public Ice.AsyncResult begin_disconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number, java.util.Map<String, String> __ctx, Callback_MC3_disconnectRtspCall2Channels __cb);

    public CmdResult end_disconnectRtspCall2Channels(Ice.AsyncResult __result);

    public CmdResult reconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number);

    public CmdResult reconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_reconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number);

    public Ice.AsyncResult begin_reconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_reconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number, Ice.Callback __cb);

    public Ice.AsyncResult begin_reconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_reconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number, Callback_MC3_reconnectRtspCall2Channels __cb);

    public Ice.AsyncResult begin_reconnectRtspCall2Channels(TerminalInfo rtspTerminal, String number, java.util.Map<String, String> __ctx, Callback_MC3_reconnectRtspCall2Channels __cb);

    public CmdResult end_reconnectRtspCall2Channels(Ice.AsyncResult __result);

    public CmdResult setLogoPath2Channels(String logoPath);

    public CmdResult setLogoPath2Channels(String logoPath, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setLogoPath2Channels(String logoPath);

    public Ice.AsyncResult begin_setLogoPath2Channels(String logoPath, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setLogoPath2Channels(String logoPath, Ice.Callback __cb);

    public Ice.AsyncResult begin_setLogoPath2Channels(String logoPath, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setLogoPath2Channels(String logoPath, Callback_MC3_setLogoPath2Channels __cb);

    public Ice.AsyncResult begin_setLogoPath2Channels(String logoPath, java.util.Map<String, String> __ctx, Callback_MC3_setLogoPath2Channels __cb);

    public CmdResult end_setLogoPath2Channels(Ice.AsyncResult __result);
}
