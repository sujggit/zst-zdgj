// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `IConfig.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.vmediax.oneplusn.ice.api.vmxICE;

public class IConfig implements java.lang.Cloneable, java.io.Serializable
{
    public String name;

    public String comment;

    public String value;

    public String type;

    public String initValue;

    public String selectValue;

    public String range;

    public IConfig()
    {
    }

    public IConfig(String name, String comment, String value, String type, String initValue, String selectValue, String range)
    {
        this.name = name;
        this.comment = comment;
        this.value = value;
        this.type = type;
        this.initValue = initValue;
        this.selectValue = selectValue;
        this.range = range;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        IConfig _r = null;
        try
        {
            _r = (IConfig)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(name != _r.name)
            {
                if(name == null || _r.name == null || !name.equals(_r.name))
                {
                    return false;
                }
            }
            if(comment != _r.comment)
            {
                if(comment == null || _r.comment == null || !comment.equals(_r.comment))
                {
                    return false;
                }
            }
            if(value != _r.value)
            {
                if(value == null || _r.value == null || !value.equals(_r.value))
                {
                    return false;
                }
            }
            if(type != _r.type)
            {
                if(type == null || _r.type == null || !type.equals(_r.type))
                {
                    return false;
                }
            }
            if(initValue != _r.initValue)
            {
                if(initValue == null || _r.initValue == null || !initValue.equals(_r.initValue))
                {
                    return false;
                }
            }
            if(selectValue != _r.selectValue)
            {
                if(selectValue == null || _r.selectValue == null || !selectValue.equals(_r.selectValue))
                {
                    return false;
                }
            }
            if(range != _r.range)
            {
                if(range == null || _r.range == null || !range.equals(_r.range))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        if(name != null)
        {
            __h = 5 * __h + name.hashCode();
        }
        if(comment != null)
        {
            __h = 5 * __h + comment.hashCode();
        }
        if(value != null)
        {
            __h = 5 * __h + value.hashCode();
        }
        if(type != null)
        {
            __h = 5 * __h + type.hashCode();
        }
        if(initValue != null)
        {
            __h = 5 * __h + initValue.hashCode();
        }
        if(selectValue != null)
        {
            __h = 5 * __h + selectValue.hashCode();
        }
        if(range != null)
        {
            __h = 5 * __h + range.hashCode();
        }
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(name);
        __os.writeString(comment);
        __os.writeString(value);
        __os.writeString(type);
        __os.writeString(initValue);
        __os.writeString(selectValue);
        __os.writeString(range);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        name = __is.readString();
        comment = __is.readString();
        value = __is.readString();
        type = __is.readString();
        initValue = __is.readString();
        selectValue = __is.readString();
        range = __is.readString();
    }
}
