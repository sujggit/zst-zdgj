// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `MCXMPPPrx.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.vmediax.oneplusn.ice.api.vmxICE;

public interface MCXMPPPrx extends vmxICE.VMXObjectPrx
{
    public int register(XmppUser user);

    public int register(XmppUser user, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_register(XmppUser user);

    public Ice.AsyncResult begin_register(XmppUser user, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_register(XmppUser user, Ice.Callback __cb);

    public Ice.AsyncResult begin_register(XmppUser user, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_register(XmppUser user, Callback_MCXMPP_register __cb);

    public Ice.AsyncResult begin_register(XmppUser user, java.util.Map<String, String> __ctx, Callback_MCXMPP_register __cb);

    public int end_register(Ice.AsyncResult __result);

    public int deleteXmppUser(int userId);

    public int deleteXmppUser(int userId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteXmppUser(int userId);

    public Ice.AsyncResult begin_deleteXmppUser(int userId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteXmppUser(int userId, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteXmppUser(int userId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteXmppUser(int userId, Callback_MCXMPP_deleteXmppUser __cb);

    public Ice.AsyncResult begin_deleteXmppUser(int userId, java.util.Map<String, String> __ctx, Callback_MCXMPP_deleteXmppUser __cb);

    public int end_deleteXmppUser(Ice.AsyncResult __result);

    public java.util.List<XmppTree> getTreeList();

    public java.util.List<XmppTree> getTreeList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTreeList();

    public Ice.AsyncResult begin_getTreeList(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTreeList(Ice.Callback __cb);

    public Ice.AsyncResult begin_getTreeList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTreeList(Callback_MCXMPP_getTreeList __cb);

    public Ice.AsyncResult begin_getTreeList(java.util.Map<String, String> __ctx, Callback_MCXMPP_getTreeList __cb);

    public java.util.List<XmppTree> end_getTreeList(Ice.AsyncResult __result);

    public int addUser2Department(int userId, int departmentId);

    public int addUser2Department(int userId, int departmentId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addUser2Department(int userId, int departmentId);

    public Ice.AsyncResult begin_addUser2Department(int userId, int departmentId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addUser2Department(int userId, int departmentId, Ice.Callback __cb);

    public Ice.AsyncResult begin_addUser2Department(int userId, int departmentId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_addUser2Department(int userId, int departmentId, Callback_MCXMPP_addUser2Department __cb);

    public Ice.AsyncResult begin_addUser2Department(int userId, int departmentId, java.util.Map<String, String> __ctx, Callback_MCXMPP_addUser2Department __cb);

    public int end_addUser2Department(Ice.AsyncResult __result);

    public int removeUserInDepart(int userId, int departmentId);

    public int removeUserInDepart(int userId, int departmentId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_removeUserInDepart(int userId, int departmentId);

    public Ice.AsyncResult begin_removeUserInDepart(int userId, int departmentId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_removeUserInDepart(int userId, int departmentId, Ice.Callback __cb);

    public Ice.AsyncResult begin_removeUserInDepart(int userId, int departmentId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_removeUserInDepart(int userId, int departmentId, Callback_MCXMPP_removeUserInDepart __cb);

    public Ice.AsyncResult begin_removeUserInDepart(int userId, int departmentId, java.util.Map<String, String> __ctx, Callback_MCXMPP_removeUserInDepart __cb);

    public int end_removeUserInDepart(Ice.AsyncResult __result);

    public int modifyUserInDepart(int userId, int departmentId);

    public int modifyUserInDepart(int userId, int departmentId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_modifyUserInDepart(int userId, int departmentId);

    public Ice.AsyncResult begin_modifyUserInDepart(int userId, int departmentId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_modifyUserInDepart(int userId, int departmentId, Ice.Callback __cb);

    public Ice.AsyncResult begin_modifyUserInDepart(int userId, int departmentId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_modifyUserInDepart(int userId, int departmentId, Callback_MCXMPP_modifyUserInDepart __cb);

    public Ice.AsyncResult begin_modifyUserInDepart(int userId, int departmentId, java.util.Map<String, String> __ctx, Callback_MCXMPP_modifyUserInDepart __cb);

    public int end_modifyUserInDepart(Ice.AsyncResult __result);

    public int addDepartment(XmppDepartment xd);

    public int addDepartment(XmppDepartment xd, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addDepartment(XmppDepartment xd);

    public Ice.AsyncResult begin_addDepartment(XmppDepartment xd, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addDepartment(XmppDepartment xd, Ice.Callback __cb);

    public Ice.AsyncResult begin_addDepartment(XmppDepartment xd, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_addDepartment(XmppDepartment xd, Callback_MCXMPP_addDepartment __cb);

    public Ice.AsyncResult begin_addDepartment(XmppDepartment xd, java.util.Map<String, String> __ctx, Callback_MCXMPP_addDepartment __cb);

    public int end_addDepartment(Ice.AsyncResult __result);

    public int modifyDepartment(XmppDepartment xd);

    public int modifyDepartment(XmppDepartment xd, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_modifyDepartment(XmppDepartment xd);

    public Ice.AsyncResult begin_modifyDepartment(XmppDepartment xd, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_modifyDepartment(XmppDepartment xd, Ice.Callback __cb);

    public Ice.AsyncResult begin_modifyDepartment(XmppDepartment xd, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_modifyDepartment(XmppDepartment xd, Callback_MCXMPP_modifyDepartment __cb);

    public Ice.AsyncResult begin_modifyDepartment(XmppDepartment xd, java.util.Map<String, String> __ctx, Callback_MCXMPP_modifyDepartment __cb);

    public int end_modifyDepartment(Ice.AsyncResult __result);

    public int deleteDepartment(int id);

    public int deleteDepartment(int id, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteDepartment(int id);

    public Ice.AsyncResult begin_deleteDepartment(int id, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteDepartment(int id, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteDepartment(int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteDepartment(int id, Callback_MCXMPP_deleteDepartment __cb);

    public Ice.AsyncResult begin_deleteDepartment(int id, java.util.Map<String, String> __ctx, Callback_MCXMPP_deleteDepartment __cb);

    public int end_deleteDepartment(Ice.AsyncResult __result);

    public int startConferenceXmpp();

    public int startConferenceXmpp(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_startConferenceXmpp();

    public Ice.AsyncResult begin_startConferenceXmpp(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_startConferenceXmpp(Ice.Callback __cb);

    public Ice.AsyncResult begin_startConferenceXmpp(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_startConferenceXmpp(Callback_MCXMPP_startConferenceXmpp __cb);

    public Ice.AsyncResult begin_startConferenceXmpp(java.util.Map<String, String> __ctx, Callback_MCXMPP_startConferenceXmpp __cb);

    public int end_startConferenceXmpp(Ice.AsyncResult __result);

    public int stopConferenceXmpp(String number);

    public int stopConferenceXmpp(String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stopConferenceXmpp(String number);

    public Ice.AsyncResult begin_stopConferenceXmpp(String number, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stopConferenceXmpp(String number, Ice.Callback __cb);

    public Ice.AsyncResult begin_stopConferenceXmpp(String number, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_stopConferenceXmpp(String number, Callback_MCXMPP_stopConferenceXmpp __cb);

    public Ice.AsyncResult begin_stopConferenceXmpp(String number, java.util.Map<String, String> __ctx, Callback_MCXMPP_stopConferenceXmpp __cb);

    public int end_stopConferenceXmpp(Ice.AsyncResult __result);
}
