// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `LiveMeetTemplate.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.vmediax.oneplusn.ice.api.vmxICE;

public class LiveMeetTemplate implements java.lang.Cloneable, java.io.Serializable
{
    public int id;

    public String bandwidth;

    public String vsize;

    public String vscreen;

    public String templatename;

    public LiveMeetTemplate()
    {
    }

    public LiveMeetTemplate(int id, String bandwidth, String vsize, String vscreen, String templatename)
    {
        this.id = id;
        this.bandwidth = bandwidth;
        this.vsize = vsize;
        this.vscreen = vscreen;
        this.templatename = templatename;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        LiveMeetTemplate _r = null;
        try
        {
            _r = (LiveMeetTemplate)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                return false;
            }
            if(bandwidth != _r.bandwidth)
            {
                if(bandwidth == null || _r.bandwidth == null || !bandwidth.equals(_r.bandwidth))
                {
                    return false;
                }
            }
            if(vsize != _r.vsize)
            {
                if(vsize == null || _r.vsize == null || !vsize.equals(_r.vsize))
                {
                    return false;
                }
            }
            if(vscreen != _r.vscreen)
            {
                if(vscreen == null || _r.vscreen == null || !vscreen.equals(_r.vscreen))
                {
                    return false;
                }
            }
            if(templatename != _r.templatename)
            {
                if(templatename == null || _r.templatename == null || !templatename.equals(_r.templatename))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        __h = 5 * __h + id;
        if(bandwidth != null)
        {
            __h = 5 * __h + bandwidth.hashCode();
        }
        if(vsize != null)
        {
            __h = 5 * __h + vsize.hashCode();
        }
        if(vscreen != null)
        {
            __h = 5 * __h + vscreen.hashCode();
        }
        if(templatename != null)
        {
            __h = 5 * __h + templatename.hashCode();
        }
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(id);
        __os.writeString(bandwidth);
        __os.writeString(vsize);
        __os.writeString(vscreen);
        __os.writeString(templatename);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readInt();
        bandwidth = __is.readString();
        vsize = __is.readString();
        vscreen = __is.readString();
        templatename = __is.readString();
    }
}
