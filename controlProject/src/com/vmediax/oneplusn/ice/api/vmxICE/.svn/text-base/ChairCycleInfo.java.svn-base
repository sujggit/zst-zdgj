// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `ChairCycleInfo.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.vmediax.oneplusn.ice.api.vmxICE;

public class ChairCycleInfo implements java.lang.Cloneable, java.io.Serializable
{
    public String terminalIp;

    public String terminalName;

    public String number;

    public String type;

    public ChairCycleInfo()
    {
    }

    public ChairCycleInfo(String terminalIp, String terminalName, String number, String type)
    {
        this.terminalIp = terminalIp;
        this.terminalName = terminalName;
        this.number = number;
        this.type = type;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ChairCycleInfo _r = null;
        try
        {
            _r = (ChairCycleInfo)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(terminalIp != _r.terminalIp)
            {
                if(terminalIp == null || _r.terminalIp == null || !terminalIp.equals(_r.terminalIp))
                {
                    return false;
                }
            }
            if(terminalName != _r.terminalName)
            {
                if(terminalName == null || _r.terminalName == null || !terminalName.equals(_r.terminalName))
                {
                    return false;
                }
            }
            if(number != _r.number)
            {
                if(number == null || _r.number == null || !number.equals(_r.number))
                {
                    return false;
                }
            }
            if(type != _r.type)
            {
                if(type == null || _r.type == null || !type.equals(_r.type))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        if(terminalIp != null)
        {
            __h = 5 * __h + terminalIp.hashCode();
        }
        if(terminalName != null)
        {
            __h = 5 * __h + terminalName.hashCode();
        }
        if(number != null)
        {
            __h = 5 * __h + number.hashCode();
        }
        if(type != null)
        {
            __h = 5 * __h + type.hashCode();
        }
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(terminalIp);
        __os.writeString(terminalName);
        __os.writeString(number);
        __os.writeString(type);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        terminalIp = __is.readString();
        terminalName = __is.readString();
        number = __is.readString();
        type = __is.readString();
    }
}
