// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `ConferenceState.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.vmediax.oneplusn.ice.mp.vmxMP;

/**
 * 枚举会议对象[Conference]的状态.
 **/
public enum ConferenceState implements java.io.Serializable
{
    
    /**
     * 空闲状态，当处于初始化状态或者调用了[Conference]->[stop]()，会议的状态将为ConferenceStateIdle.
     **/
    ConferenceStateIdle,
    
    /**
     * 运行状态，当调用了[Conference]->[start]()成功后，会议状态转变为ConferenceStateProcessing.
     **/
    ConferenceStateProcessing;

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeByte((byte)ordinal());
    }

    public static ConferenceState
    __read(IceInternal.BasicStream __is)
    {
        int __v = __is.readByte(2);
        return values()[__v];
    }
}
