// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `ObjectState.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package vmxICE;

/**
 * 对象的状态枚举
 **/
public enum ObjectState implements java.io.Serializable
{
    
    /**
     * 初始状态，由任何状态迁移到这个状态会造成对象的重新初始化。
     **/
    StateNull,
    
    /**
     * 暂停状态，这个状态不会清除一些对象缓存，但是数据流暂时停止了.
     **/
    StatePause,
    
    /**
     * 运行状态，这个状态指示对象开始运转.
     **/
    StateRunning,
    
    /**
     * 停止状态，这个状态指示对象停止运转，清空缓存，仅保留初始设置，和StateNull状态区别在于通过属性设置方式设置的信息仍然保留.
     **/
    StateStop;

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeByte((byte)ordinal());
    }

    public static ObjectState
    __read(IceInternal.BasicStream __is)
    {
        int __v = __is.readByte(4);
        return values()[__v];
    }
}
