// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `PropertyInfo.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package vmxICE;

/**
 * 属性信息结构，包含了属性的名称，标志，默认值，当前值及说明，用于.
 * 
 **/
public class PropertyInfo implements java.lang.Cloneable, java.io.Serializable
{
    /**
     * 属性的名称.
     * 
     **/
    public String name;

    /**
     * 属性的index.
     * 
     **/
    public int id;

    /**
     * 属性的标志，可读([PropertyFlagRead])，可写([PropertyFlagWrite])等.
     * 
     **/
    public int flag;

    /**
     * 属性的默认值.
     * 
     **/
    public String defaultValue;

    /**
     * 属性的当前值.
     * 
     **/
    public String value;

    /**
     * 属性的说明.
     * 
     **/
    public String info;

    /**
     * 属性值的类型.
     * 
     **/
    public ValueType type;

    /**
     * 属性值的最小值
     * 
     **/
    public String minValue;

    /**
     * 属性值的最大值
     * 
     **/
    public String maxValue;

    public PropertyInfo()
    {
    }

    public PropertyInfo(String name, int id, int flag, String defaultValue, String value, String info, ValueType type, String minValue, String maxValue)
    {
        this.name = name;
        this.id = id;
        this.flag = flag;
        this.defaultValue = defaultValue;
        this.value = value;
        this.info = info;
        this.type = type;
        this.minValue = minValue;
        this.maxValue = maxValue;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        PropertyInfo _r = null;
        try
        {
            _r = (PropertyInfo)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(name != _r.name)
            {
                if(name == null || _r.name == null || !name.equals(_r.name))
                {
                    return false;
                }
            }
            if(id != _r.id)
            {
                return false;
            }
            if(flag != _r.flag)
            {
                return false;
            }
            if(defaultValue != _r.defaultValue)
            {
                if(defaultValue == null || _r.defaultValue == null || !defaultValue.equals(_r.defaultValue))
                {
                    return false;
                }
            }
            if(value != _r.value)
            {
                if(value == null || _r.value == null || !value.equals(_r.value))
                {
                    return false;
                }
            }
            if(info != _r.info)
            {
                if(info == null || _r.info == null || !info.equals(_r.info))
                {
                    return false;
                }
            }
            if(type != _r.type)
            {
                if(type == null || _r.type == null || !type.equals(_r.type))
                {
                    return false;
                }
            }
            if(minValue != _r.minValue)
            {
                if(minValue == null || _r.minValue == null || !minValue.equals(_r.minValue))
                {
                    return false;
                }
            }
            if(maxValue != _r.maxValue)
            {
                if(maxValue == null || _r.maxValue == null || !maxValue.equals(_r.maxValue))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        if(name != null)
        {
            __h = 5 * __h + name.hashCode();
        }
        __h = 5 * __h + id;
        __h = 5 * __h + flag;
        if(defaultValue != null)
        {
            __h = 5 * __h + defaultValue.hashCode();
        }
        if(value != null)
        {
            __h = 5 * __h + value.hashCode();
        }
        if(info != null)
        {
            __h = 5 * __h + info.hashCode();
        }
        if(type != null)
        {
            __h = 5 * __h + type.hashCode();
        }
        if(minValue != null)
        {
            __h = 5 * __h + minValue.hashCode();
        }
        if(maxValue != null)
        {
            __h = 5 * __h + maxValue.hashCode();
        }
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(name);
        __os.writeInt(id);
        __os.writeInt(flag);
        __os.writeString(defaultValue);
        __os.writeString(value);
        __os.writeString(info);
        type.__write(__os);
        __os.writeString(minValue);
        __os.writeString(maxValue);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        name = __is.readString();
        id = __is.readInt();
        flag = __is.readInt();
        defaultValue = __is.readString();
        value = __is.readString();
        info = __is.readString();
        type = ValueType.__read(__is);
        minValue = __is.readString();
        maxValue = __is.readString();
    }
}
