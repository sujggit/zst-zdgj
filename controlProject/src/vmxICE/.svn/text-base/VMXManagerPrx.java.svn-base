// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `VMXManagerPrx.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package vmxICE;

public interface VMXManagerPrx extends VMXObjectPrx
{
    /**
     * 注册一个对象池.
     * 
     * @param list 输出所有的对象池的ID的列表.
     * 
     * @return 返回值为0代表成功，否则为失败的错误码.
     * 
     **/
    public int registerMgr(String ID, String name, int objectType);

    /**
     * 注册一个对象池.
     * 
     * @param list 输出所有的对象池的ID的列表.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return 返回值为0代表成功，否则为失败的错误码.
     * 
     **/
    public int registerMgr(String ID, String name, int objectType, java.util.Map<String, String> __ctx);

    /**
     * 注册一个对象池.
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_registerMgr(String ID, String name, int objectType);

    /**
     * 注册一个对象池.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_registerMgr(String ID, String name, int objectType, java.util.Map<String, String> __ctx);

    /**
     * 注册一个对象池.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_registerMgr(String ID, String name, int objectType, Ice.Callback __cb);

    /**
     * 注册一个对象池.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_registerMgr(String ID, String name, int objectType, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 注册一个对象池.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_registerMgr(String ID, String name, int objectType, Callback_VMXManager_registerMgr __cb);

    /**
     * 注册一个对象池.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_registerMgr(String ID, String name, int objectType, java.util.Map<String, String> __ctx, Callback_VMXManager_registerMgr __cb);

    /**
     * 注册一个对象池.
     * 
     * @param __result The asynchronous result object.
     * @return 返回值为0代表成功，否则为失败的错误码.
     * 
     **/
    public int end_registerMgr(Ice.AsyncResult __result);

    /**
     * 获取所有对象池的ID列表.
     * 
     * @return 返回所有的对象池的ID的列表.
     * 
     **/
    public ObjectMgrInfo[] getObjectMgrList();

    /**
     * 获取所有对象池的ID列表.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return 返回所有的对象池的ID的列表.
     * 
     **/
    public ObjectMgrInfo[] getObjectMgrList(java.util.Map<String, String> __ctx);

    /**
     * 获取所有对象池的ID列表.
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getObjectMgrList();

    /**
     * 获取所有对象池的ID列表.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getObjectMgrList(java.util.Map<String, String> __ctx);

    /**
     * 获取所有对象池的ID列表.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getObjectMgrList(Ice.Callback __cb);

    /**
     * 获取所有对象池的ID列表.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getObjectMgrList(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取所有对象池的ID列表.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getObjectMgrList(Callback_VMXManager_getObjectMgrList __cb);

    /**
     * 获取所有对象池的ID列表.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getObjectMgrList(java.util.Map<String, String> __ctx, Callback_VMXManager_getObjectMgrList __cb);

    /**
     * 获取所有对象池的ID列表.
     * 
     * @param __result The asynchronous result object.
     * @return 返回所有的对象池的ID的列表.
     * 
     **/
    public ObjectMgrInfo[] end_getObjectMgrList(Ice.AsyncResult __result);
}
