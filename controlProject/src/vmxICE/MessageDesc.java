// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `MessageDesc.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package vmxICE;

/**
 * 消息的描述结构
 **/
public class MessageDesc implements java.lang.Cloneable, java.io.Serializable
{
    /**
     * 消息的ID，在vmx_msg::CMessage类中有基础定义，另外在各项目中可能会有扩展定义.
     **/
    public int ID;

    /**
     * 消息的描述信息.
     **/
    public String desc;

    public MessageDesc()
    {
    }

    public MessageDesc(int ID, String desc)
    {
        this.ID = ID;
        this.desc = desc;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MessageDesc _r = null;
        try
        {
            _r = (MessageDesc)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(ID != _r.ID)
            {
                return false;
            }
            if(desc != _r.desc)
            {
                if(desc == null || _r.desc == null || !desc.equals(_r.desc))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        __h = 5 * __h + ID;
        if(desc != null)
        {
            __h = 5 * __h + desc.hashCode();
        }
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(ID);
        __os.writeString(desc);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        ID = __is.readInt();
        desc = __is.readString();
    }
}
