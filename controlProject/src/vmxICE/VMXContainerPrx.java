// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `VMXContainerPrx.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package vmxICE;

/**
 * [VMXContainer]是mmap6中容器的定义。
 **/
public interface VMXContainerPrx extends VMXObjectPrx
{
    /**
     * 获取所有子对象的ID，如果对象本身包含业务逻辑特性，则输出所有使用的节点ID.
     * 
     * @param list 输出所有的子对象的ID的列表.
     * 
     * @return 返回值为0代表成功，否则为失败的错误码.
     * 
     **/
    public int getChildrenID(StringSeqHolder list);

    /**
     * 获取所有子对象的ID，如果对象本身包含业务逻辑特性，则输出所有使用的节点ID.
     * 
     * @param list 输出所有的子对象的ID的列表.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return 返回值为0代表成功，否则为失败的错误码.
     * 
     **/
    public int getChildrenID(StringSeqHolder list, java.util.Map<String, String> __ctx);

    /**
     * 获取所有子对象的ID，如果对象本身包含业务逻辑特性，则输出所有使用的节点ID.
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getChildrenID();

    /**
     * 获取所有子对象的ID，如果对象本身包含业务逻辑特性，则输出所有使用的节点ID.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getChildrenID(java.util.Map<String, String> __ctx);

    /**
     * 获取所有子对象的ID，如果对象本身包含业务逻辑特性，则输出所有使用的节点ID.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getChildrenID(Ice.Callback __cb);

    /**
     * 获取所有子对象的ID，如果对象本身包含业务逻辑特性，则输出所有使用的节点ID.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getChildrenID(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取所有子对象的ID，如果对象本身包含业务逻辑特性，则输出所有使用的节点ID.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getChildrenID(Callback_VMXContainer_getChildrenID __cb);

    /**
     * 获取所有子对象的ID，如果对象本身包含业务逻辑特性，则输出所有使用的节点ID.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getChildrenID(java.util.Map<String, String> __ctx, Callback_VMXContainer_getChildrenID __cb);

    /**
     * 获取所有子对象的ID，如果对象本身包含业务逻辑特性，则输出所有使用的节点ID.
     * 
     * @param list 输出所有的子对象的ID的列表.
     * 
     * @param __result The asynchronous result object.
     * @return 返回值为0代表成功，否则为失败的错误码.
     * 
     **/
    public int end_getChildrenID(StringSeqHolder list, Ice.AsyncResult __result);
}
