// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `ResourcePrx.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package vmxICE;

/**
 * [VMXResource]是mmap6框架中对业务层系统中的资源的定义，<b>接口定义还未完成</b>。
 **/
public interface ResourcePrx extends VMXObjectPrx
{
    /**
     * 枚举资源对象接受输入的节点列表.
     * 
     * @param list 媒体流节点的ID及流类型列表.
     * 
     * @return 返回值为0代表成功，否则为失败的错误码.
     * 
     **/
    public int enumInputNode(MediaNodeListHolder list);

    /**
     * 枚举资源对象接受输入的节点列表.
     * 
     * @param list 媒体流节点的ID及流类型列表.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return 返回值为0代表成功，否则为失败的错误码.
     * 
     **/
    public int enumInputNode(MediaNodeListHolder list, java.util.Map<String, String> __ctx);

    /**
     * 枚举资源对象接受输入的节点列表.
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enumInputNode();

    /**
     * 枚举资源对象接受输入的节点列表.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enumInputNode(java.util.Map<String, String> __ctx);

    /**
     * 枚举资源对象接受输入的节点列表.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enumInputNode(Ice.Callback __cb);

    /**
     * 枚举资源对象接受输入的节点列表.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enumInputNode(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 枚举资源对象接受输入的节点列表.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enumInputNode(Callback_Resource_enumInputNode __cb);

    /**
     * 枚举资源对象接受输入的节点列表.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enumInputNode(java.util.Map<String, String> __ctx, Callback_Resource_enumInputNode __cb);

    /**
     * 枚举资源对象接受输入的节点列表.
     * 
     * @param list 媒体流节点的ID及流类型列表.
     * 
     * @param __result The asynchronous result object.
     * @return 返回值为0代表成功，否则为失败的错误码.
     * 
     **/
    public int end_enumInputNode(MediaNodeListHolder list, Ice.AsyncResult __result);

    /**
     * 枚举资源对象提供输出的节点列表.
     * 
     * @param list 媒体流节点的ID及流类型列表.
     * 
     * @return 返回值为0代表成功，否则为失败的错误码.
     * 
     **/
    public int enumOutputNode(MediaNodeListHolder list);

    /**
     * 枚举资源对象提供输出的节点列表.
     * 
     * @param list 媒体流节点的ID及流类型列表.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return 返回值为0代表成功，否则为失败的错误码.
     * 
     **/
    public int enumOutputNode(MediaNodeListHolder list, java.util.Map<String, String> __ctx);

    /**
     * 枚举资源对象提供输出的节点列表.
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enumOutputNode();

    /**
     * 枚举资源对象提供输出的节点列表.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enumOutputNode(java.util.Map<String, String> __ctx);

    /**
     * 枚举资源对象提供输出的节点列表.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enumOutputNode(Ice.Callback __cb);

    /**
     * 枚举资源对象提供输出的节点列表.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enumOutputNode(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 枚举资源对象提供输出的节点列表.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enumOutputNode(Callback_Resource_enumOutputNode __cb);

    /**
     * 枚举资源对象提供输出的节点列表.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_enumOutputNode(java.util.Map<String, String> __ctx, Callback_Resource_enumOutputNode __cb);

    /**
     * 枚举资源对象提供输出的节点列表.
     * 
     * @param list 媒体流节点的ID及流类型列表.
     * 
     * @param __result The asynchronous result object.
     * @return 返回值为0代表成功，否则为失败的错误码.
     * 
     **/
    public int end_enumOutputNode(MediaNodeListHolder list, Ice.AsyncResult __result);
}
